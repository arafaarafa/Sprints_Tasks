
led_v3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000e74  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  00000e74  00000f08  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000030  00800070  00800070  00000f18  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000f18  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000f48  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000240  00000000  00000000  00000f84  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000023fb  00000000  00000000  000011c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d6a  00000000  00000000  000035bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001361  00000000  00000000  00004329  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005b0  00000000  00000000  0000568c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000caa  00000000  00000000  00005c3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a6c  00000000  00000000  000068e6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e8  00000000  00000000  00008352  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__vector_1>
   8:	0c 94 87 04 	jmp	0x90e	; 0x90e <__vector_2>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__vector_10>
  2c:	0c 94 10 05 	jmp	0xa20	; 0xa20 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e7       	ldi	r30, 0x74	; 116
  68:	fe e0       	ldi	r31, 0x0E	; 14
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e7       	ldi	r26, 0x70	; 112
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 3a       	cpi	r26, 0xA0	; 160
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 33 03 	call	0x666	; 0x666 <main>
  8a:	0c 94 38 07 	jmp	0xe70	; 0xe70 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <function_LEDs>:
*-this function is the callback function for led counter
*
*/
void function_LEDs(void){

		led_counter++;
  92:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <led_counter>
  96:	8f 5f       	subi	r24, 0xFF	; 255
  98:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <led_counter>
		if(led_counter>7){
  9c:	88 30       	cpi	r24, 0x08	; 8
  9e:	14 f0       	brlt	.+4      	; 0xa4 <function_LEDs+0x12>
			led_counter=0;
  a0:	10 92 74 00 	sts	0x0074, r1	; 0x800074 <led_counter>
  a4:	08 95       	ret

000000a6 <function_Modes>:
*-this function is the callback function for mode counter
*
*/
void function_Modes(void){
	
		mode_counter++;
  a6:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <mode_counter>
  aa:	8f 5f       	subi	r24, 0xFF	; 255
  ac:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <mode_counter>
		if(mode_counter>4){
  b0:	85 30       	cpi	r24, 0x05	; 5
  b2:	10 f0       	brcs	.+4      	; 0xb8 <function_Modes+0x12>
			mode_counter=0;
  b4:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <mode_counter>
  b8:	08 95       	ret

000000ba <function_Systick>:
*   -Description-
*-this function is the callback function for sys_tick
*
*/
void function_Systick(void){
	sys_tick ++;
  ba:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <sys_tick>
  be:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <sys_tick+0x1>
  c2:	01 96       	adiw	r24, 0x01	; 1
  c4:	90 93 72 00 	sts	0x0072, r25	; 0x800072 <sys_tick+0x1>
  c8:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <sys_tick>
  cc:	08 95       	ret

000000ce <app_init>:
void app_init(void){
	
	/*led 1 configuration*/
	led[0].port_name=PORTA_INDEX;
	led[0].pin=PIN_0;
	led[0].led_status= LED_OFF;
  ce:	10 92 7d 00 	sts	0x007D, r1	; 0x80007d <led>
	
	/*led 2 configuration*/
	led[1].port_name=PORTA_INDEX;
  d2:	ee e7       	ldi	r30, 0x7E	; 126
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	80 81       	ld	r24, Z
	led[1].pin=PIN_1;
  d8:	80 78       	andi	r24, 0x80	; 128
	led[1].led_status= LED_OFF;
  da:	80 61       	ori	r24, 0x10	; 16
  dc:	8f 77       	andi	r24, 0x7F	; 127
  de:	80 83       	st	Z, r24
	
	/*led 3 configuration*/
	led[2].port_name=PORTA_INDEX;
  e0:	ef e7       	ldi	r30, 0x7F	; 127
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	80 81       	ld	r24, Z
	led[2].pin=PIN_2;
  e6:	80 78       	andi	r24, 0x80	; 128
	led[2].led_status= LED_OFF;
  e8:	80 62       	ori	r24, 0x20	; 32
  ea:	8f 77       	andi	r24, 0x7F	; 127
  ec:	80 83       	st	Z, r24
	
	/*led 4 configuration*/
	led[3].port_name=PORTA_INDEX;
  ee:	e0 e8       	ldi	r30, 0x80	; 128
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	80 81       	ld	r24, Z
	led[3].pin=PIN_3;
  f4:	80 78       	andi	r24, 0x80	; 128
	led[3].led_status= LED_OFF;
  f6:	80 63       	ori	r24, 0x30	; 48
  f8:	8f 77       	andi	r24, 0x7F	; 127
  fa:	80 83       	st	Z, r24
	
	/*button 1 configuration*/
	btn_1.pin_INT_config.INT_mode = FALLING_EDGE;
  fc:	e7 e9       	ldi	r30, 0x97	; 151
  fe:	f0 e0       	ldi	r31, 0x00	; 0
 100:	92 e0       	ldi	r25, 0x02	; 2
 102:	91 83       	std	Z+1, r25	; 0x01
	btn_1.pin_INT_config.pin_config.port = PORTD_INDEX;
 104:	80 81       	ld	r24, Z
 106:	88 7f       	andi	r24, 0xF8	; 248
 108:	83 60       	ori	r24, 0x03	; 3
	btn_1.pin_INT_config.pin_config.pin = PIN_2;
 10a:	87 7c       	andi	r24, 0xC7	; 199
	btn_1.pin_INT_config.pin_config.direction = GPIO_DIRECTION_INPUT;
 10c:	80 61       	ori	r24, 0x10	; 16
 10e:	8f 7b       	andi	r24, 0xBF	; 191
 110:	80 83       	st	Z, r24
	
	/*button 2 configuration*/
	btn_2.pin_INT_config.INT_mode = FALLING_EDGE;
 112:	e1 e8       	ldi	r30, 0x81	; 129
 114:	f0 e0       	ldi	r31, 0x00	; 0
 116:	91 83       	std	Z+1, r25	; 0x01
	btn_2.pin_INT_config.pin_config.port = PORTD_INDEX;
 118:	80 81       	ld	r24, Z
 11a:	88 7f       	andi	r24, 0xF8	; 248
 11c:	83 60       	ori	r24, 0x03	; 3
	btn_2.pin_INT_config.pin_config.pin = PIN_3;
 11e:	87 7c       	andi	r24, 0xC7	; 199
	btn_2.pin_INT_config.pin_config.direction = GPIO_DIRECTION_INPUT;
 120:	88 61       	ori	r24, 0x18	; 24
 122:	8f 7b       	andi	r24, 0xBF	; 191
 124:	80 83       	st	Z, r24
	
	modes[0].time_on = 100;
 126:	e3 e8       	ldi	r30, 0x83	; 131
 128:	f0 e0       	ldi	r31, 0x00	; 0
 12a:	84 e6       	ldi	r24, 0x64	; 100
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	91 83       	std	Z+1, r25	; 0x01
 130:	80 83       	st	Z, r24
	modes[0].time_off = 900;
 132:	84 e8       	ldi	r24, 0x84	; 132
 134:	93 e0       	ldi	r25, 0x03	; 3
 136:	93 83       	std	Z+3, r25	; 0x03
 138:	82 83       	std	Z+2, r24	; 0x02


	modes[1].time_on = 200;
 13a:	88 ec       	ldi	r24, 0xC8	; 200
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	95 83       	std	Z+5, r25	; 0x05
 140:	84 83       	std	Z+4, r24	; 0x04
	modes[1].time_off = 800;
 142:	20 e2       	ldi	r18, 0x20	; 32
 144:	33 e0       	ldi	r19, 0x03	; 3
 146:	37 83       	std	Z+7, r19	; 0x07
 148:	26 83       	std	Z+6, r18	; 0x06

	modes[2].time_on = 300;
 14a:	4c e2       	ldi	r20, 0x2C	; 44
 14c:	51 e0       	ldi	r21, 0x01	; 1
 14e:	51 87       	std	Z+9, r21	; 0x09
 150:	40 87       	std	Z+8, r20	; 0x08
	modes[2].time_off = 700;
 152:	4c eb       	ldi	r20, 0xBC	; 188
 154:	52 e0       	ldi	r21, 0x02	; 2
 156:	53 87       	std	Z+11, r21	; 0x0b
 158:	42 87       	std	Z+10, r20	; 0x0a

	modes[3].time_on = 500;
 15a:	44 ef       	ldi	r20, 0xF4	; 244
 15c:	51 e0       	ldi	r21, 0x01	; 1
 15e:	55 87       	std	Z+13, r21	; 0x0d
 160:	44 87       	std	Z+12, r20	; 0x0c
	modes[3].time_off = 500;
 162:	57 87       	std	Z+15, r21	; 0x0f
 164:	46 87       	std	Z+14, r20	; 0x0e

	modes[4].time_on = 800;
 166:	31 8b       	std	Z+17, r19	; 0x11
 168:	20 8b       	std	Z+16, r18	; 0x10
	modes[4].time_off = 200;
 16a:	93 8b       	std	Z+19, r25	; 0x13
 16c:	82 8b       	std	Z+18, r24	; 0x12
	
	/*init all leds and buttons*/
	led_intialize(&led[0]);
 16e:	8d e7       	ldi	r24, 0x7D	; 125
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	0e 94 81 01 	call	0x302	; 0x302 <led_intialize>
	led_intialize(&led[1]);
 176:	8e e7       	ldi	r24, 0x7E	; 126
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	0e 94 81 01 	call	0x302	; 0x302 <led_intialize>
	led_intialize(&led[2]);
 17e:	8f e7       	ldi	r24, 0x7F	; 127
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	0e 94 81 01 	call	0x302	; 0x302 <led_intialize>
	led_intialize(&led[3]);
 186:	80 e8       	ldi	r24, 0x80	; 128
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	0e 94 81 01 	call	0x302	; 0x302 <led_intialize>
	button_with_INT(&btn_1, function_LEDs);
 18e:	69 e4       	ldi	r22, 0x49	; 73
 190:	70 e0       	ldi	r23, 0x00	; 0
 192:	87 e9       	ldi	r24, 0x97	; 151
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	0e 94 02 02 	call	0x404	; 0x404 <button_with_INT>
	button_with_INT(&btn_2, function_Modes);
 19a:	63 e5       	ldi	r22, 0x53	; 83
 19c:	70 e0       	ldi	r23, 0x00	; 0
 19e:	81 e8       	ldi	r24, 0x81	; 129
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	0e 94 02 02 	call	0x404	; 0x404 <button_with_INT>
	timing_init(1000, function_Systick);
 1a6:	6d e5       	ldi	r22, 0x5D	; 93
 1a8:	70 e0       	ldi	r23, 0x00	; 0
 1aa:	88 ee       	ldi	r24, 0xE8	; 232
 1ac:	93 e0       	ldi	r25, 0x03	; 3
 1ae:	0e 94 77 02 	call	0x4ee	; 0x4ee <timing_init>
	button_enable_INT(&btn_1);
 1b2:	87 e9       	ldi	r24, 0x97	; 151
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	0e 94 38 02 	call	0x470	; 0x470 <button_enable_INT>
	button_enable_INT(&btn_2);
 1ba:	81 e8       	ldi	r24, 0x81	; 129
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	0e 94 38 02 	call	0x470	; 0x470 <button_enable_INT>
	timing_start();
 1c2:	0e 94 29 03 	call	0x652	; 0x652 <timing_start>
 1c6:	08 95       	ret

000001c8 <app_start>:
	
}



void app_start(void){
 1c8:	cf 93       	push	r28
 1ca:	df 93       	push	r29
	static uint8_t prev_state=0;          
	uint8_t mode_counter_tmp = 0,
			led_counter_tmp =0;
	
	button_disable_INT(&btn_2);
 1cc:	81 e8       	ldi	r24, 0x81	; 129
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	0e 94 53 02 	call	0x4a6	; 0x4a6 <button_disable_INT>
	mode_counter_tmp = mode_counter;
 1d4:	c0 91 73 00 	lds	r28, 0x0073	; 0x800073 <mode_counter>
	button_enable_INT(&btn_2);	
 1d8:	81 e8       	ldi	r24, 0x81	; 129
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	0e 94 38 02 	call	0x470	; 0x470 <button_enable_INT>
		
	if(sys_tick<= modes[mode_counter_tmp].time_on){
 1e0:	8c 2f       	mov	r24, r28
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	fc 01       	movw	r30, r24
 1e6:	ee 0f       	add	r30, r30
 1e8:	ff 1f       	adc	r31, r31
 1ea:	ee 0f       	add	r30, r30
 1ec:	ff 1f       	adc	r31, r31
 1ee:	ed 57       	subi	r30, 0x7D	; 125
 1f0:	ff 4f       	sbci	r31, 0xFF	; 255
 1f2:	40 81       	ld	r20, Z
 1f4:	51 81       	ldd	r21, Z+1	; 0x01
 1f6:	20 91 71 00 	lds	r18, 0x0071	; 0x800071 <sys_tick>
 1fa:	30 91 72 00 	lds	r19, 0x0072	; 0x800072 <sys_tick+0x1>
 1fe:	42 17       	cp	r20, r18
 200:	53 07       	cpc	r21, r19
 202:	08 f4       	brcc	.+2      	; 0x206 <app_start+0x3e>
 204:	52 c0       	rjmp	.+164    	; 0x2aa <app_start+0xe2>
		if(prev_state == 0){
 206:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <__data_end>
 20a:	81 11       	cpse	r24, r1
 20c:	77 c0       	rjmp	.+238    	; 0x2fc <app_start+0x134>
			button_disable_INT(&btn_1);
 20e:	87 e9       	ldi	r24, 0x97	; 151
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	0e 94 53 02 	call	0x4a6	; 0x4a6 <button_disable_INT>
			led_counter_tmp = led_counter;
 216:	d0 91 74 00 	lds	r29, 0x0074	; 0x800074 <led_counter>
			button_enable_INT(&btn_1);
 21a:	87 e9       	ldi	r24, 0x97	; 151
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	0e 94 38 02 	call	0x470	; 0x470 <button_enable_INT>
			for(uint8_t i=0;i<LED_NO;i++){
 222:	c0 e0       	ldi	r28, 0x00	; 0
 224:	3c c0       	rjmp	.+120    	; 0x29e <app_start+0xd6>
				if((led_counter_tmp/lED_STATE_FORM)!=1){
 226:	8b ef       	ldi	r24, 0xFB	; 251
 228:	8d 0f       	add	r24, r29
 22a:	85 30       	cpi	r24, 0x05	; 5
 22c:	e0 f0       	brcs	.+56     	; 0x266 <app_start+0x9e>
					if(i<(led_counter_tmp%lED_STATE_FORM)){
 22e:	8d ec       	ldi	r24, 0xCD	; 205
 230:	d8 9f       	mul	r29, r24
 232:	81 2d       	mov	r24, r1
 234:	11 24       	eor	r1, r1
 236:	86 95       	lsr	r24
 238:	86 95       	lsr	r24
 23a:	98 2f       	mov	r25, r24
 23c:	99 0f       	add	r25, r25
 23e:	99 0f       	add	r25, r25
 240:	89 0f       	add	r24, r25
 242:	9d 2f       	mov	r25, r29
 244:	98 1b       	sub	r25, r24
 246:	c9 17       	cp	r28, r25
 248:	38 f4       	brcc	.+14     	; 0x258 <app_start+0x90>
						led_turn_on(&led[i]);
 24a:	8c 2f       	mov	r24, r28
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	83 58       	subi	r24, 0x83	; 131
 250:	9f 4f       	sbci	r25, 0xFF	; 255
 252:	0e 94 b2 01 	call	0x364	; 0x364 <led_turn_on>
 256:	22 c0       	rjmp	.+68     	; 0x29c <app_start+0xd4>
						}else{
						
						led_turn_off(&led[i]);
 258:	8c 2f       	mov	r24, r28
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	83 58       	subi	r24, 0x83	; 131
 25e:	9f 4f       	sbci	r25, 0xFF	; 255
 260:	0e 94 da 01 	call	0x3b4	; 0x3b4 <led_turn_off>
 264:	1b c0       	rjmp	.+54     	; 0x29c <app_start+0xd4>
					}
				}else{
					if(i<=(led_counter_tmp%lED_STATE_FORM)){
 266:	8d ec       	ldi	r24, 0xCD	; 205
 268:	d8 9f       	mul	r29, r24
 26a:	81 2d       	mov	r24, r1
 26c:	11 24       	eor	r1, r1
 26e:	86 95       	lsr	r24
 270:	86 95       	lsr	r24
 272:	98 2f       	mov	r25, r24
 274:	99 0f       	add	r25, r25
 276:	99 0f       	add	r25, r25
 278:	89 0f       	add	r24, r25
 27a:	9d 2f       	mov	r25, r29
 27c:	98 1b       	sub	r25, r24
 27e:	9c 17       	cp	r25, r28
 280:	38 f0       	brcs	.+14     	; 0x290 <app_start+0xc8>
						led_turn_off(&led[i]);	
 282:	8c 2f       	mov	r24, r28
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	83 58       	subi	r24, 0x83	; 131
 288:	9f 4f       	sbci	r25, 0xFF	; 255
 28a:	0e 94 da 01 	call	0x3b4	; 0x3b4 <led_turn_off>
 28e:	06 c0       	rjmp	.+12     	; 0x29c <app_start+0xd4>
					}else{
						led_turn_on(&led[i]);	
 290:	8c 2f       	mov	r24, r28
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	83 58       	subi	r24, 0x83	; 131
 296:	9f 4f       	sbci	r25, 0xFF	; 255
 298:	0e 94 b2 01 	call	0x364	; 0x364 <led_turn_on>
	if(sys_tick<= modes[mode_counter_tmp].time_on){
		if(prev_state == 0){
			button_disable_INT(&btn_1);
			led_counter_tmp = led_counter;
			button_enable_INT(&btn_1);
			for(uint8_t i=0;i<LED_NO;i++){
 29c:	cf 5f       	subi	r28, 0xFF	; 255
 29e:	c4 30       	cpi	r28, 0x04	; 4
 2a0:	10 f2       	brcs	.-124    	; 0x226 <app_start+0x5e>
						led_turn_on(&led[i]);	
					}
					
				}
			}
			prev_state = 1;
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__data_end>
 2a8:	29 c0       	rjmp	.+82     	; 0x2fc <app_start+0x134>
		}
		
		
	}else if(sys_tick<(modes[mode_counter_tmp].time_on+modes[mode_counter_tmp].time_off)){
 2aa:	88 0f       	add	r24, r24
 2ac:	99 1f       	adc	r25, r25
 2ae:	88 0f       	add	r24, r24
 2b0:	99 1f       	adc	r25, r25
 2b2:	fc 01       	movw	r30, r24
 2b4:	ed 57       	subi	r30, 0x7D	; 125
 2b6:	ff 4f       	sbci	r31, 0xFF	; 255
 2b8:	82 81       	ldd	r24, Z+2	; 0x02
 2ba:	93 81       	ldd	r25, Z+3	; 0x03
 2bc:	48 0f       	add	r20, r24
 2be:	59 1f       	adc	r21, r25
 2c0:	24 17       	cp	r18, r20
 2c2:	35 07       	cpc	r19, r21
 2c4:	98 f4       	brcc	.+38     	; 0x2ec <app_start+0x124>
		if(prev_state == 1){
 2c6:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <__data_end>
 2ca:	81 30       	cpi	r24, 0x01	; 1
 2cc:	b9 f4       	brne	.+46     	; 0x2fc <app_start+0x134>
 2ce:	08 c0       	rjmp	.+16     	; 0x2e0 <app_start+0x118>
			for(uint8_t i=0;i<LED_NO;i++){
				led_turn_off(&led[i]);
 2d0:	8c 2f       	mov	r24, r28
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	83 58       	subi	r24, 0x83	; 131
 2d6:	9f 4f       	sbci	r25, 0xFF	; 255
 2d8:	0e 94 da 01 	call	0x3b4	; 0x3b4 <led_turn_off>
		}
		
		
	}else if(sys_tick<(modes[mode_counter_tmp].time_on+modes[mode_counter_tmp].time_off)){
		if(prev_state == 1){
			for(uint8_t i=0;i<LED_NO;i++){
 2dc:	cf 5f       	subi	r28, 0xFF	; 255
 2de:	01 c0       	rjmp	.+2      	; 0x2e2 <app_start+0x11a>
 2e0:	c0 e0       	ldi	r28, 0x00	; 0
 2e2:	c4 30       	cpi	r28, 0x04	; 4
 2e4:	a8 f3       	brcs	.-22     	; 0x2d0 <app_start+0x108>
				led_turn_off(&led[i]);
			}
			prev_state = 0;
 2e6:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <__data_end>
 2ea:	08 c0       	rjmp	.+16     	; 0x2fc <app_start+0x134>
		}
		
	}else{
		timing_stop();
 2ec:	0e 94 2e 03 	call	0x65c	; 0x65c <timing_stop>
		sys_tick=0;
 2f0:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <sys_tick+0x1>
 2f4:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <sys_tick>
		timing_start();
 2f8:	0e 94 29 03 	call	0x652	; 0x652 <timing_start>
	}
		
	
	
	
}
 2fc:	df 91       	pop	r29
 2fe:	cf 91       	pop	r28
 300:	08 95       	ret

00000302 <led_intialize>:
 302:	cf 93       	push	r28
 304:	df 93       	push	r29
 306:	1f 92       	push	r1
 308:	cd b7       	in	r28, 0x3d	; 61
 30a:	de b7       	in	r29, 0x3e	; 62
 30c:	00 97       	sbiw	r24, 0x00	; 0
 30e:	29 f1       	breq	.+74     	; 0x35a <led_intialize+0x58>
 310:	fc 01       	movw	r30, r24
 312:	20 81       	ld	r18, Z
 314:	92 2f       	mov	r25, r18
 316:	97 70       	andi	r25, 0x07	; 7
 318:	89 81       	ldd	r24, Y+1	; 0x01
 31a:	88 7f       	andi	r24, 0xF8	; 248
 31c:	89 2b       	or	r24, r25
 31e:	92 2f       	mov	r25, r18
 320:	92 95       	swap	r25
 322:	9f 70       	andi	r25, 0x0F	; 15
 324:	97 70       	andi	r25, 0x07	; 7
 326:	99 0f       	add	r25, r25
 328:	99 0f       	add	r25, r25
 32a:	99 0f       	add	r25, r25
 32c:	87 7c       	andi	r24, 0xC7	; 199
 32e:	89 2b       	or	r24, r25
 330:	27 fb       	bst	r18, 7
 332:	22 27       	eor	r18, r18
 334:	20 f9       	bld	r18, 0
 336:	80 64       	ori	r24, 0x40	; 64
 338:	20 fb       	bst	r18, 0
 33a:	87 f9       	bld	r24, 7
 33c:	89 83       	std	Y+1, r24	; 0x01
 33e:	ce 01       	movw	r24, r28
 340:	01 96       	adiw	r24, 0x01	; 1
 342:	0e 94 38 03 	call	0x670	; 0x670 <gpio_pin_direction_initialize>
 346:	69 81       	ldd	r22, Y+1	; 0x01
 348:	67 fb       	bst	r22, 7
 34a:	66 27       	eor	r22, r22
 34c:	60 f9       	bld	r22, 0
 34e:	ce 01       	movw	r24, r28
 350:	01 96       	adiw	r24, 0x01	; 1
 352:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <gpio_pin_write_logic>
 356:	80 e0       	ldi	r24, 0x00	; 0
 358:	01 c0       	rjmp	.+2      	; 0x35c <led_intialize+0x5a>
 35a:	81 e0       	ldi	r24, 0x01	; 1
 35c:	0f 90       	pop	r0
 35e:	df 91       	pop	r29
 360:	cf 91       	pop	r28
 362:	08 95       	ret

00000364 <led_turn_on>:
 364:	cf 93       	push	r28
 366:	df 93       	push	r29
 368:	1f 92       	push	r1
 36a:	cd b7       	in	r28, 0x3d	; 61
 36c:	de b7       	in	r29, 0x3e	; 62
 36e:	00 97       	sbiw	r24, 0x00	; 0
 370:	e1 f0       	breq	.+56     	; 0x3aa <led_turn_on+0x46>
 372:	fc 01       	movw	r30, r24
 374:	30 81       	ld	r19, Z
 376:	83 2f       	mov	r24, r19
 378:	87 70       	andi	r24, 0x07	; 7
 37a:	99 81       	ldd	r25, Y+1	; 0x01
 37c:	98 7f       	andi	r25, 0xF8	; 248
 37e:	98 2b       	or	r25, r24
 380:	23 2f       	mov	r18, r19
 382:	22 95       	swap	r18
 384:	2f 70       	andi	r18, 0x0F	; 15
 386:	27 70       	andi	r18, 0x07	; 7
 388:	22 0f       	add	r18, r18
 38a:	22 0f       	add	r18, r18
 38c:	22 0f       	add	r18, r18
 38e:	97 7c       	andi	r25, 0xC7	; 199
 390:	92 2b       	or	r25, r18
 392:	90 64       	ori	r25, 0x40	; 64
 394:	90 68       	ori	r25, 0x80	; 128
 396:	99 83       	std	Y+1, r25	; 0x01
 398:	30 68       	ori	r19, 0x80	; 128
 39a:	30 83       	st	Z, r19
 39c:	61 e0       	ldi	r22, 0x01	; 1
 39e:	ce 01       	movw	r24, r28
 3a0:	01 96       	adiw	r24, 0x01	; 1
 3a2:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <gpio_pin_write_logic>
 3a6:	80 e0       	ldi	r24, 0x00	; 0
 3a8:	01 c0       	rjmp	.+2      	; 0x3ac <led_turn_on+0x48>
 3aa:	81 e0       	ldi	r24, 0x01	; 1
 3ac:	0f 90       	pop	r0
 3ae:	df 91       	pop	r29
 3b0:	cf 91       	pop	r28
 3b2:	08 95       	ret

000003b4 <led_turn_off>:
 3b4:	cf 93       	push	r28
 3b6:	df 93       	push	r29
 3b8:	1f 92       	push	r1
 3ba:	cd b7       	in	r28, 0x3d	; 61
 3bc:	de b7       	in	r29, 0x3e	; 62
 3be:	00 97       	sbiw	r24, 0x00	; 0
 3c0:	e1 f0       	breq	.+56     	; 0x3fa <led_turn_off+0x46>
 3c2:	fc 01       	movw	r30, r24
 3c4:	30 81       	ld	r19, Z
 3c6:	83 2f       	mov	r24, r19
 3c8:	87 70       	andi	r24, 0x07	; 7
 3ca:	99 81       	ldd	r25, Y+1	; 0x01
 3cc:	98 7f       	andi	r25, 0xF8	; 248
 3ce:	98 2b       	or	r25, r24
 3d0:	23 2f       	mov	r18, r19
 3d2:	22 95       	swap	r18
 3d4:	2f 70       	andi	r18, 0x0F	; 15
 3d6:	27 70       	andi	r18, 0x07	; 7
 3d8:	22 0f       	add	r18, r18
 3da:	22 0f       	add	r18, r18
 3dc:	22 0f       	add	r18, r18
 3de:	97 7c       	andi	r25, 0xC7	; 199
 3e0:	92 2b       	or	r25, r18
 3e2:	90 64       	ori	r25, 0x40	; 64
 3e4:	9f 77       	andi	r25, 0x7F	; 127
 3e6:	99 83       	std	Y+1, r25	; 0x01
 3e8:	3f 77       	andi	r19, 0x7F	; 127
 3ea:	30 83       	st	Z, r19
 3ec:	60 e0       	ldi	r22, 0x00	; 0
 3ee:	ce 01       	movw	r24, r28
 3f0:	01 96       	adiw	r24, 0x01	; 1
 3f2:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <gpio_pin_write_logic>
 3f6:	80 e0       	ldi	r24, 0x00	; 0
 3f8:	01 c0       	rjmp	.+2      	; 0x3fc <led_turn_off+0x48>
 3fa:	81 e0       	ldi	r24, 0x01	; 1
 3fc:	0f 90       	pop	r0
 3fe:	df 91       	pop	r29
 400:	cf 91       	pop	r28
 402:	08 95       	ret

00000404 <button_with_INT>:
 404:	0f 93       	push	r16
 406:	1f 93       	push	r17
 408:	cf 93       	push	r28
 40a:	df 93       	push	r29
 40c:	00 97       	sbiw	r24, 0x00	; 0
 40e:	21 f1       	breq	.+72     	; 0x458 <button_with_INT+0x54>
 410:	61 15       	cp	r22, r1
 412:	71 05       	cpc	r23, r1
 414:	19 f1       	breq	.+70     	; 0x45c <button_with_INT+0x58>
 416:	fc 01       	movw	r30, r24
 418:	20 81       	ld	r18, Z
 41a:	32 2f       	mov	r19, r18
 41c:	37 70       	andi	r19, 0x07	; 7
 41e:	33 30       	cpi	r19, 0x03	; 3
 420:	f9 f4       	brne	.+62     	; 0x460 <button_with_INT+0x5c>
 422:	8b 01       	movw	r16, r22
 424:	ec 01       	movw	r28, r24
 426:	28 73       	andi	r18, 0x38	; 56
 428:	20 31       	cpi	r18, 0x10	; 16
 42a:	51 f4       	brne	.+20     	; 0x440 <button_with_INT+0x3c>
 42c:	0e 94 38 03 	call	0x670	; 0x670 <gpio_pin_direction_initialize>
 430:	c8 01       	movw	r24, r16
 432:	0e 94 4c 04 	call	0x898	; 0x898 <gpio_set_callback_INT0_function>
 436:	ce 01       	movw	r24, r28
 438:	0e 94 cd 03 	call	0x79a	; 0x79a <gpio_init_INT0>
 43c:	80 e0       	ldi	r24, 0x00	; 0
 43e:	13 c0       	rjmp	.+38     	; 0x466 <button_with_INT+0x62>
 440:	28 31       	cpi	r18, 0x18	; 24
 442:	81 f4       	brne	.+32     	; 0x464 <button_with_INT+0x60>
 444:	0e 94 38 03 	call	0x670	; 0x670 <gpio_pin_direction_initialize>
 448:	c8 01       	movw	r24, r16
 44a:	0e 94 56 04 	call	0x8ac	; 0x8ac <gpio_set_callback_INT1_function>
 44e:	ce 01       	movw	r24, r28
 450:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <gpio_init_INT1>
 454:	80 e0       	ldi	r24, 0x00	; 0
 456:	07 c0       	rjmp	.+14     	; 0x466 <button_with_INT+0x62>
 458:	81 e0       	ldi	r24, 0x01	; 1
 45a:	05 c0       	rjmp	.+10     	; 0x466 <button_with_INT+0x62>
 45c:	81 e0       	ldi	r24, 0x01	; 1
 45e:	03 c0       	rjmp	.+6      	; 0x466 <button_with_INT+0x62>
 460:	81 e0       	ldi	r24, 0x01	; 1
 462:	01 c0       	rjmp	.+2      	; 0x466 <button_with_INT+0x62>
 464:	81 e0       	ldi	r24, 0x01	; 1
 466:	df 91       	pop	r29
 468:	cf 91       	pop	r28
 46a:	1f 91       	pop	r17
 46c:	0f 91       	pop	r16
 46e:	08 95       	ret

00000470 <button_enable_INT>:
 470:	00 97       	sbiw	r24, 0x00	; 0
 472:	99 f0       	breq	.+38     	; 0x49a <button_enable_INT+0x2a>
 474:	fc 01       	movw	r30, r24
 476:	20 81       	ld	r18, Z
 478:	32 2f       	mov	r19, r18
 47a:	37 70       	andi	r19, 0x07	; 7
 47c:	33 30       	cpi	r19, 0x03	; 3
 47e:	79 f4       	brne	.+30     	; 0x49e <button_enable_INT+0x2e>
 480:	28 73       	andi	r18, 0x38	; 56
 482:	20 31       	cpi	r18, 0x10	; 16
 484:	21 f4       	brne	.+8      	; 0x48e <button_enable_INT+0x1e>
 486:	0e 94 fe 03 	call	0x7fc	; 0x7fc <gpio_enable_INT0>
 48a:	80 e0       	ldi	r24, 0x00	; 0
 48c:	08 95       	ret
 48e:	28 31       	cpi	r18, 0x18	; 24
 490:	41 f4       	brne	.+16     	; 0x4a2 <button_enable_INT+0x32>
 492:	0e 94 12 04 	call	0x824	; 0x824 <gpio_enable_INT1>
 496:	80 e0       	ldi	r24, 0x00	; 0
 498:	08 95       	ret
 49a:	81 e0       	ldi	r24, 0x01	; 1
 49c:	08 95       	ret
 49e:	81 e0       	ldi	r24, 0x01	; 1
 4a0:	08 95       	ret
 4a2:	81 e0       	ldi	r24, 0x01	; 1
 4a4:	08 95       	ret

000004a6 <button_disable_INT>:
 4a6:	00 97       	sbiw	r24, 0x00	; 0
 4a8:	99 f0       	breq	.+38     	; 0x4d0 <button_disable_INT+0x2a>
 4aa:	fc 01       	movw	r30, r24
 4ac:	20 81       	ld	r18, Z
 4ae:	32 2f       	mov	r19, r18
 4b0:	37 70       	andi	r19, 0x07	; 7
 4b2:	33 30       	cpi	r19, 0x03	; 3
 4b4:	79 f4       	brne	.+30     	; 0x4d4 <button_disable_INT+0x2e>
 4b6:	28 73       	andi	r18, 0x38	; 56
 4b8:	20 31       	cpi	r18, 0x10	; 16
 4ba:	21 f4       	brne	.+8      	; 0x4c4 <button_disable_INT+0x1e>
 4bc:	0e 94 2c 04 	call	0x858	; 0x858 <gpio_disable_INT0>
 4c0:	80 e0       	ldi	r24, 0x00	; 0
 4c2:	08 95       	ret
 4c4:	28 31       	cpi	r18, 0x18	; 24
 4c6:	41 f4       	brne	.+16     	; 0x4d8 <button_disable_INT+0x32>
 4c8:	0e 94 3c 04 	call	0x878	; 0x878 <gpio_disable_INT1>
 4cc:	80 e0       	ldi	r24, 0x00	; 0
 4ce:	08 95       	ret
 4d0:	81 e0       	ldi	r24, 0x01	; 1
 4d2:	08 95       	ret
 4d4:	81 e0       	ldi	r24, 0x01	; 1
 4d6:	08 95       	ret
 4d8:	81 e0       	ldi	r24, 0x01	; 1
 4da:	08 95       	ret

000004dc <function_callback>:




static void function_callback(void)
{	(*tmp_callBack)();
 4dc:	e0 91 99 00 	lds	r30, 0x0099	; 0x800099 <tmp_callBack>
 4e0:	f0 91 9a 00 	lds	r31, 0x009A	; 0x80009a <tmp_callBack+0x1>
 4e4:	09 95       	icall
	TCNT0_ADD = timer_configuration.OCR;
 4e6:	80 91 9d 00 	lds	r24, 0x009D	; 0x80009d <timer_configuration+0x2>
 4ea:	82 bf       	out	0x32, r24	; 50
 4ec:	08 95       	ret

000004ee <timing_init>:
}
	
	
Std_ReturnType timing_init(uint16_t time_us , void (*callback)(void)){
 4ee:	8f 92       	push	r8
 4f0:	9f 92       	push	r9
 4f2:	af 92       	push	r10
 4f4:	bf 92       	push	r11
 4f6:	ef 92       	push	r14
 4f8:	ff 92       	push	r15
 4fa:	0f 93       	push	r16
 4fc:	1f 93       	push	r17
 4fe:	cf 93       	push	r28
 500:	df 93       	push	r29
 502:	cd b7       	in	r28, 0x3d	; 61
 504:	de b7       	in	r29, 0x3e	; 62
 506:	66 97       	sbiw	r28, 0x16	; 22
 508:	0f b6       	in	r0, 0x3f	; 63
 50a:	f8 94       	cli
 50c:	de bf       	out	0x3e, r29	; 62
 50e:	0f be       	out	0x3f, r0	; 63
 510:	cd bf       	out	0x3d, r28	; 61
 512:	8c 01       	movw	r16, r24
 514:	7b 01       	movw	r14, r22
	volatile uint16_t timer_init_value =0;
 516:	1a 82       	std	Y+2, r1	; 0x02
 518:	19 82       	std	Y+1, r1	; 0x01
	volatile uint32_t max_delay =0;
 51a:	1b 82       	std	Y+3, r1	; 0x03
 51c:	1c 82       	std	Y+4, r1	; 0x04
 51e:	1d 82       	std	Y+5, r1	; 0x05
 520:	1e 82       	std	Y+6, r1	; 0x06
	volatile uint32_t cycle_time=0;	
 522:	1f 82       	std	Y+7, r1	; 0x07
 524:	18 86       	std	Y+8, r1	; 0x08
 526:	19 86       	std	Y+9, r1	; 0x09
 528:	1a 86       	std	Y+10, r1	; 0x0a
	volatile uint32_t prescaller = 256;
 52a:	80 e0       	ldi	r24, 0x00	; 0
 52c:	91 e0       	ldi	r25, 0x01	; 1
 52e:	a0 e0       	ldi	r26, 0x00	; 0
 530:	b0 e0       	ldi	r27, 0x00	; 0
 532:	8b 87       	std	Y+11, r24	; 0x0b
 534:	9c 87       	std	Y+12, r25	; 0x0c
 536:	ad 87       	std	Y+13, r26	; 0x0d
 538:	be 87       	std	Y+14, r27	; 0x0e
	volatile uint64_t prscaller_max_regiter = 65536;
 53a:	1f 86       	std	Y+15, r1	; 0x0f
 53c:	18 8a       	std	Y+16, r1	; 0x10
 53e:	81 e0       	ldi	r24, 0x01	; 1
 540:	89 8b       	std	Y+17, r24	; 0x11
 542:	1a 8a       	std	Y+18, r1	; 0x12
 544:	1b 8a       	std	Y+19, r1	; 0x13
 546:	1c 8a       	std	Y+20, r1	; 0x14
 548:	1d 8a       	std	Y+21, r1	; 0x15
 54a:	1e 8a       	std	Y+22, r1	; 0x16
	Std_ReturnType ret = E_OK;
	max_delay = (((double)prscaller_max_regiter/MCU_CLOCK)*1000000);
 54c:	2f 85       	ldd	r18, Y+15	; 0x0f
 54e:	38 89       	ldd	r19, Y+16	; 0x10
 550:	49 89       	ldd	r20, Y+17	; 0x11
 552:	5a 89       	ldd	r21, Y+18	; 0x12
 554:	6b 89       	ldd	r22, Y+19	; 0x13
 556:	7c 89       	ldd	r23, Y+20	; 0x14
 558:	8d 89       	ldd	r24, Y+21	; 0x15
 55a:	9e 89       	ldd	r25, Y+22	; 0x16
 55c:	0e 94 3c 06 	call	0xc78	; 0xc78 <__floatundisf>
 560:	20 e0       	ldi	r18, 0x00	; 0
 562:	34 e2       	ldi	r19, 0x24	; 36
 564:	44 e7       	ldi	r20, 0x74	; 116
 566:	59 e4       	ldi	r21, 0x49	; 73
 568:	0e 94 5e 05 	call	0xabc	; 0xabc <__divsf3>
 56c:	20 e0       	ldi	r18, 0x00	; 0
 56e:	34 e2       	ldi	r19, 0x24	; 36
 570:	44 e7       	ldi	r20, 0x74	; 116
 572:	59 e4       	ldi	r21, 0x49	; 73
 574:	0e 94 cb 06 	call	0xd96	; 0xd96 <__mulsf3>
 578:	0e 94 d0 05 	call	0xba0	; 0xba0 <__fixunssfsi>
 57c:	6b 83       	std	Y+3, r22	; 0x03
 57e:	7c 83       	std	Y+4, r23	; 0x04
 580:	8d 83       	std	Y+5, r24	; 0x05
 582:	9e 83       	std	Y+6, r25	; 0x06
	cycle_time = ((double)prescaller/MCU_CLOCK)*1000000;
 584:	6b 85       	ldd	r22, Y+11	; 0x0b
 586:	7c 85       	ldd	r23, Y+12	; 0x0c
 588:	8d 85       	ldd	r24, Y+13	; 0x0d
 58a:	9e 85       	ldd	r25, Y+14	; 0x0e
 58c:	0e 94 ff 05 	call	0xbfe	; 0xbfe <__floatunsisf>
 590:	20 e0       	ldi	r18, 0x00	; 0
 592:	34 e2       	ldi	r19, 0x24	; 36
 594:	44 e7       	ldi	r20, 0x74	; 116
 596:	59 e4       	ldi	r21, 0x49	; 73
 598:	0e 94 5e 05 	call	0xabc	; 0xabc <__divsf3>
 59c:	20 e0       	ldi	r18, 0x00	; 0
 59e:	34 e2       	ldi	r19, 0x24	; 36
 5a0:	44 e7       	ldi	r20, 0x74	; 116
 5a2:	59 e4       	ldi	r21, 0x49	; 73
 5a4:	0e 94 cb 06 	call	0xd96	; 0xd96 <__mulsf3>
 5a8:	0e 94 d0 05 	call	0xba0	; 0xba0 <__fixunssfsi>
 5ac:	6f 83       	std	Y+7, r22	; 0x07
 5ae:	78 87       	std	Y+8, r23	; 0x08
 5b0:	89 87       	std	Y+9, r24	; 0x09
 5b2:	9a 87       	std	Y+10, r25	; 0x0a
	timer_init_value = (double)(max_delay- time_us)/cycle_time;
 5b4:	8b 81       	ldd	r24, Y+3	; 0x03
 5b6:	9c 81       	ldd	r25, Y+4	; 0x04
 5b8:	ad 81       	ldd	r26, Y+5	; 0x05
 5ba:	be 81       	ldd	r27, Y+6	; 0x06
 5bc:	bc 01       	movw	r22, r24
 5be:	cd 01       	movw	r24, r26
 5c0:	60 1b       	sub	r22, r16
 5c2:	71 0b       	sbc	r23, r17
 5c4:	81 09       	sbc	r24, r1
 5c6:	91 09       	sbc	r25, r1
 5c8:	0e 94 ff 05 	call	0xbfe	; 0xbfe <__floatunsisf>
 5cc:	4b 01       	movw	r8, r22
 5ce:	5c 01       	movw	r10, r24
 5d0:	6f 81       	ldd	r22, Y+7	; 0x07
 5d2:	78 85       	ldd	r23, Y+8	; 0x08
 5d4:	89 85       	ldd	r24, Y+9	; 0x09
 5d6:	9a 85       	ldd	r25, Y+10	; 0x0a
 5d8:	0e 94 ff 05 	call	0xbfe	; 0xbfe <__floatunsisf>
 5dc:	9b 01       	movw	r18, r22
 5de:	ac 01       	movw	r20, r24
 5e0:	c5 01       	movw	r24, r10
 5e2:	b4 01       	movw	r22, r8
 5e4:	0e 94 5e 05 	call	0xabc	; 0xabc <__divsf3>
 5e8:	0e 94 d0 05 	call	0xba0	; 0xba0 <__fixunssfsi>
 5ec:	7a 83       	std	Y+2, r23	; 0x02
 5ee:	69 83       	std	Y+1, r22	; 0x01
	
	if(time_us < 1000 ){
 5f0:	08 3e       	cpi	r16, 0xE8	; 232
 5f2:	13 40       	sbci	r17, 0x03	; 3
 5f4:	e0 f0       	brcs	.+56     	; 0x62e <timing_init+0x140>
		ret =E_NOT_OK;
	}else{
		if(MCU_CLOCK ==0)
			return E_NOT_OK;
		timer_configuration.OCR=timer_init_value;
 5f6:	89 81       	ldd	r24, Y+1	; 0x01
 5f8:	9a 81       	ldd	r25, Y+2	; 0x02
 5fa:	eb e9       	ldi	r30, 0x9B	; 155
 5fc:	f0 e0       	ldi	r31, 0x00	; 0
 5fe:	93 83       	std	Z+3, r25	; 0x03
 600:	82 83       	std	Z+2, r24	; 0x02
		timer_configuration.timer_mode = TIMER_MODE_NORMAL;
 602:	10 82       	st	Z, r1
		timer_configuration.timer_prescaller=TIMER_PRESCALLER_256;
 604:	84 e0       	ldi	r24, 0x04	; 4
 606:	81 83       	std	Z+1, r24	; 0x01
		timer_configuration.timer_of_interrupt =TIMER_OVERFLOW_INTERRUPT_ENABLE;
 608:	ef e9       	ldi	r30, 0x9F	; 159
 60a:	f0 e0       	ldi	r31, 0x00	; 0
 60c:	80 81       	ld	r24, Z
 60e:	82 60       	ori	r24, 0x02	; 2
 610:	80 83       	st	Z, r24
		tmp_callBack = callback;
 612:	f0 92 9a 00 	sts	0x009A, r15	; 0x80009a <tmp_callBack+0x1>
 616:	e0 92 99 00 	sts	0x0099, r14	; 0x800099 <tmp_callBack>
		timer_initialize_callback_OVF(function_callback);
 61a:	8e e6       	ldi	r24, 0x6E	; 110
 61c:	92 e0       	ldi	r25, 0x02	; 2
 61e:	0e 94 0a 05 	call	0xa14	; 0xa14 <timer_initialize_callback_OVF>
		timer0_initialization(&timer_configuration);			
 622:	8b e9       	ldi	r24, 0x9B	; 155
 624:	90 e0       	ldi	r25, 0x00	; 0
 626:	0e 94 ae 04 	call	0x95c	; 0x95c <timer0_initialization>
	volatile uint16_t timer_init_value =0;
	volatile uint32_t max_delay =0;
	volatile uint32_t cycle_time=0;	
	volatile uint32_t prescaller = 256;
	volatile uint64_t prscaller_max_regiter = 65536;
	Std_ReturnType ret = E_OK;
 62a:	80 e0       	ldi	r24, 0x00	; 0
 62c:	01 c0       	rjmp	.+2      	; 0x630 <timing_init+0x142>
	max_delay = (((double)prscaller_max_regiter/MCU_CLOCK)*1000000);
	cycle_time = ((double)prescaller/MCU_CLOCK)*1000000;
	timer_init_value = (double)(max_delay- time_us)/cycle_time;
	
	if(time_us < 1000 ){
		ret =E_NOT_OK;
 62e:	81 e0       	ldi	r24, 0x01	; 1
		timer_initialize_callback_OVF(function_callback);
		timer0_initialization(&timer_configuration);			
	}

	return ret;
}
 630:	66 96       	adiw	r28, 0x16	; 22
 632:	0f b6       	in	r0, 0x3f	; 63
 634:	f8 94       	cli
 636:	de bf       	out	0x3e, r29	; 62
 638:	0f be       	out	0x3f, r0	; 63
 63a:	cd bf       	out	0x3d, r28	; 61
 63c:	df 91       	pop	r29
 63e:	cf 91       	pop	r28
 640:	1f 91       	pop	r17
 642:	0f 91       	pop	r16
 644:	ff 90       	pop	r15
 646:	ef 90       	pop	r14
 648:	bf 90       	pop	r11
 64a:	af 90       	pop	r10
 64c:	9f 90       	pop	r9
 64e:	8f 90       	pop	r8
 650:	08 95       	ret

00000652 <timing_start>:



void timing_start(void){
	timer_start(&timer_configuration);
 652:	8b e9       	ldi	r24, 0x9B	; 155
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <timer_start>
 65a:	08 95       	ret

0000065c <timing_stop>:
}


void timing_stop(){
	
	timer_stop(&timer_configuration);
 65c:	8b e9       	ldi	r24, 0x9B	; 155
 65e:	90 e0       	ldi	r25, 0x00	; 0
 660:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <timer_stop>
 664:	08 95       	ret

00000666 <main>:


int main(void)
{
	
	app_init();
 666:	0e 94 67 00 	call	0xce	; 0xce <app_init>

	
    while(1){
		app_start();
 66a:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <app_start>
 66e:	fd cf       	rjmp	.-6      	; 0x66a <main+0x4>

00000670 <gpio_pin_direction_initialize>:
 670:	fc 01       	movw	r30, r24
 672:	89 2b       	or	r24, r25
 674:	d9 f1       	breq	.+118    	; 0x6ec <gpio_pin_direction_initialize+0x7c>
 676:	40 81       	ld	r20, Z
 678:	46 95       	lsr	r20
 67a:	46 95       	lsr	r20
 67c:	46 95       	lsr	r20
 67e:	47 70       	andi	r20, 0x07	; 7
 680:	20 81       	ld	r18, Z
 682:	27 70       	andi	r18, 0x07	; 7
 684:	30 e0       	ldi	r19, 0x00	; 0
 686:	24 30       	cpi	r18, 0x04	; 4
 688:	31 05       	cpc	r19, r1
 68a:	94 f5       	brge	.+100    	; 0x6f0 <gpio_pin_direction_initialize+0x80>
 68c:	80 81       	ld	r24, Z
 68e:	98 2f       	mov	r25, r24
 690:	90 74       	andi	r25, 0x40	; 64
 692:	86 ff       	sbrs	r24, 6
 694:	14 c0       	rjmp	.+40     	; 0x6be <gpio_pin_direction_initialize+0x4e>
 696:	22 0f       	add	r18, r18
 698:	33 1f       	adc	r19, r19
 69a:	f9 01       	movw	r30, r18
 69c:	e8 59       	subi	r30, 0x98	; 152
 69e:	ff 4f       	sbci	r31, 0xFF	; 255
 6a0:	01 90       	ld	r0, Z+
 6a2:	f0 81       	ld	r31, Z
 6a4:	e0 2d       	mov	r30, r0
 6a6:	20 81       	ld	r18, Z
 6a8:	81 e0       	ldi	r24, 0x01	; 1
 6aa:	90 e0       	ldi	r25, 0x00	; 0
 6ac:	02 c0       	rjmp	.+4      	; 0x6b2 <gpio_pin_direction_initialize+0x42>
 6ae:	88 0f       	add	r24, r24
 6b0:	99 1f       	adc	r25, r25
 6b2:	4a 95       	dec	r20
 6b4:	e2 f7       	brpl	.-8      	; 0x6ae <gpio_pin_direction_initialize+0x3e>
 6b6:	82 2b       	or	r24, r18
 6b8:	80 83       	st	Z, r24
 6ba:	80 e0       	ldi	r24, 0x00	; 0
 6bc:	08 95       	ret
 6be:	91 11       	cpse	r25, r1
 6c0:	19 c0       	rjmp	.+50     	; 0x6f4 <gpio_pin_direction_initialize+0x84>
 6c2:	22 0f       	add	r18, r18
 6c4:	33 1f       	adc	r19, r19
 6c6:	f9 01       	movw	r30, r18
 6c8:	e8 59       	subi	r30, 0x98	; 152
 6ca:	ff 4f       	sbci	r31, 0xFF	; 255
 6cc:	01 90       	ld	r0, Z+
 6ce:	f0 81       	ld	r31, Z
 6d0:	e0 2d       	mov	r30, r0
 6d2:	20 81       	ld	r18, Z
 6d4:	81 e0       	ldi	r24, 0x01	; 1
 6d6:	90 e0       	ldi	r25, 0x00	; 0
 6d8:	02 c0       	rjmp	.+4      	; 0x6de <gpio_pin_direction_initialize+0x6e>
 6da:	88 0f       	add	r24, r24
 6dc:	99 1f       	adc	r25, r25
 6de:	4a 95       	dec	r20
 6e0:	e2 f7       	brpl	.-8      	; 0x6da <gpio_pin_direction_initialize+0x6a>
 6e2:	80 95       	com	r24
 6e4:	82 23       	and	r24, r18
 6e6:	80 83       	st	Z, r24
 6e8:	80 e0       	ldi	r24, 0x00	; 0
 6ea:	08 95       	ret
 6ec:	81 e0       	ldi	r24, 0x01	; 1
 6ee:	08 95       	ret
 6f0:	81 e0       	ldi	r24, 0x01	; 1
 6f2:	08 95       	ret
 6f4:	81 e0       	ldi	r24, 0x01	; 1
 6f6:	08 95       	ret

000006f8 <gpio_pin_write_logic>:
 6f8:	00 97       	sbiw	r24, 0x00	; 0
 6fa:	09 f4       	brne	.+2      	; 0x6fe <gpio_pin_write_logic+0x6>
 6fc:	4a c0       	rjmp	.+148    	; 0x792 <gpio_pin_write_logic+0x9a>
 6fe:	66 23       	and	r22, r22
 700:	29 f1       	breq	.+74     	; 0x74c <gpio_pin_write_logic+0x54>
 702:	61 30       	cpi	r22, 0x01	; 1
 704:	09 f0       	breq	.+2      	; 0x708 <gpio_pin_write_logic+0x10>
 706:	47 c0       	rjmp	.+142    	; 0x796 <gpio_pin_write_logic+0x9e>
 708:	dc 01       	movw	r26, r24
 70a:	2c 91       	ld	r18, X
 70c:	e2 2f       	mov	r30, r18
 70e:	e7 70       	andi	r30, 0x07	; 7
 710:	f0 e0       	ldi	r31, 0x00	; 0
 712:	ee 0f       	add	r30, r30
 714:	ff 1f       	adc	r31, r31
 716:	e0 5a       	subi	r30, 0xA0	; 160
 718:	ff 4f       	sbci	r31, 0xFF	; 255
 71a:	01 90       	ld	r0, Z+
 71c:	f0 81       	ld	r31, Z
 71e:	e0 2d       	mov	r30, r0
 720:	60 81       	ld	r22, Z
 722:	26 95       	lsr	r18
 724:	26 95       	lsr	r18
 726:	26 95       	lsr	r18
 728:	27 70       	andi	r18, 0x07	; 7
 72a:	41 e0       	ldi	r20, 0x01	; 1
 72c:	50 e0       	ldi	r21, 0x00	; 0
 72e:	da 01       	movw	r26, r20
 730:	02 c0       	rjmp	.+4      	; 0x736 <gpio_pin_write_logic+0x3e>
 732:	aa 0f       	add	r26, r26
 734:	bb 1f       	adc	r27, r27
 736:	2a 95       	dec	r18
 738:	e2 f7       	brpl	.-8      	; 0x732 <gpio_pin_write_logic+0x3a>
 73a:	9d 01       	movw	r18, r26
 73c:	26 2b       	or	r18, r22
 73e:	20 83       	st	Z, r18
 740:	fc 01       	movw	r30, r24
 742:	20 81       	ld	r18, Z
 744:	20 68       	ori	r18, 0x80	; 128
 746:	20 83       	st	Z, r18
 748:	80 e0       	ldi	r24, 0x00	; 0
 74a:	08 95       	ret
 74c:	dc 01       	movw	r26, r24
 74e:	2c 91       	ld	r18, X
 750:	e2 2f       	mov	r30, r18
 752:	e7 70       	andi	r30, 0x07	; 7
 754:	f0 e0       	ldi	r31, 0x00	; 0
 756:	ee 0f       	add	r30, r30
 758:	ff 1f       	adc	r31, r31
 75a:	e0 5a       	subi	r30, 0xA0	; 160
 75c:	ff 4f       	sbci	r31, 0xFF	; 255
 75e:	01 90       	ld	r0, Z+
 760:	f0 81       	ld	r31, Z
 762:	e0 2d       	mov	r30, r0
 764:	60 81       	ld	r22, Z
 766:	26 95       	lsr	r18
 768:	26 95       	lsr	r18
 76a:	26 95       	lsr	r18
 76c:	27 70       	andi	r18, 0x07	; 7
 76e:	41 e0       	ldi	r20, 0x01	; 1
 770:	50 e0       	ldi	r21, 0x00	; 0
 772:	da 01       	movw	r26, r20
 774:	02 c0       	rjmp	.+4      	; 0x77a <gpio_pin_write_logic+0x82>
 776:	aa 0f       	add	r26, r26
 778:	bb 1f       	adc	r27, r27
 77a:	2a 95       	dec	r18
 77c:	e2 f7       	brpl	.-8      	; 0x776 <gpio_pin_write_logic+0x7e>
 77e:	9d 01       	movw	r18, r26
 780:	20 95       	com	r18
 782:	26 23       	and	r18, r22
 784:	20 83       	st	Z, r18
 786:	fc 01       	movw	r30, r24
 788:	20 81       	ld	r18, Z
 78a:	2f 77       	andi	r18, 0x7F	; 127
 78c:	20 83       	st	Z, r18
 78e:	80 e0       	ldi	r24, 0x00	; 0
 790:	08 95       	ret
 792:	81 e0       	ldi	r24, 0x01	; 1
 794:	08 95       	ret
 796:	81 e0       	ldi	r24, 0x01	; 1
 798:	08 95       	ret

0000079a <gpio_init_INT0>:
 79a:	fc 01       	movw	r30, r24
 79c:	89 2b       	or	r24, r25
 79e:	69 f0       	breq	.+26     	; 0x7ba <gpio_init_INT0+0x20>
 7a0:	90 81       	ld	r25, Z
 7a2:	9f 73       	andi	r25, 0x3F	; 63
 7a4:	93 31       	cpi	r25, 0x13	; 19
 7a6:	59 f4       	brne	.+22     	; 0x7be <gpio_init_INT0+0x24>
 7a8:	95 b7       	in	r25, 0x35	; 53
 7aa:	81 81       	ldd	r24, Z+1	; 0x01
 7ac:	89 2b       	or	r24, r25
 7ae:	85 bf       	out	0x35, r24	; 53
 7b0:	8f b7       	in	r24, 0x3f	; 63
 7b2:	80 68       	ori	r24, 0x80	; 128
 7b4:	8f bf       	out	0x3f, r24	; 63
 7b6:	80 e0       	ldi	r24, 0x00	; 0
 7b8:	08 95       	ret
 7ba:	81 e0       	ldi	r24, 0x01	; 1
 7bc:	08 95       	ret
 7be:	81 e0       	ldi	r24, 0x01	; 1
 7c0:	08 95       	ret

000007c2 <gpio_init_INT1>:
 7c2:	fc 01       	movw	r30, r24
 7c4:	89 2b       	or	r24, r25
 7c6:	b1 f0       	breq	.+44     	; 0x7f4 <gpio_init_INT1+0x32>
 7c8:	90 81       	ld	r25, Z
 7ca:	9f 73       	andi	r25, 0x3F	; 63
 7cc:	9b 31       	cpi	r25, 0x1B	; 27
 7ce:	a1 f4       	brne	.+40     	; 0x7f8 <gpio_init_INT1+0x36>
 7d0:	8b b7       	in	r24, 0x3b	; 59
 7d2:	80 68       	ori	r24, 0x80	; 128
 7d4:	8b bf       	out	0x3b, r24	; 59
 7d6:	25 b7       	in	r18, 0x35	; 53
 7d8:	91 81       	ldd	r25, Z+1	; 0x01
 7da:	89 2f       	mov	r24, r25
 7dc:	90 e0       	ldi	r25, 0x00	; 0
 7de:	88 0f       	add	r24, r24
 7e0:	99 1f       	adc	r25, r25
 7e2:	88 0f       	add	r24, r24
 7e4:	99 1f       	adc	r25, r25
 7e6:	82 2b       	or	r24, r18
 7e8:	85 bf       	out	0x35, r24	; 53
 7ea:	8f b7       	in	r24, 0x3f	; 63
 7ec:	80 68       	ori	r24, 0x80	; 128
 7ee:	8f bf       	out	0x3f, r24	; 63
 7f0:	80 e0       	ldi	r24, 0x00	; 0
 7f2:	08 95       	ret
 7f4:	81 e0       	ldi	r24, 0x01	; 1
 7f6:	08 95       	ret
 7f8:	81 e0       	ldi	r24, 0x01	; 1
 7fa:	08 95       	ret

000007fc <gpio_enable_INT0>:
 7fc:	fc 01       	movw	r30, r24
 7fe:	89 2b       	or	r24, r25
 800:	69 f0       	breq	.+26     	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
 802:	90 81       	ld	r25, Z
 804:	9f 73       	andi	r25, 0x3F	; 63
 806:	93 31       	cpi	r25, 0x13	; 19
 808:	59 f4       	brne	.+22     	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 80a:	8b b7       	in	r24, 0x3b	; 59
 80c:	80 64       	ori	r24, 0x40	; 64
 80e:	8b bf       	out	0x3b, r24	; 59
 810:	95 b7       	in	r25, 0x35	; 53
 812:	81 81       	ldd	r24, Z+1	; 0x01
 814:	89 2b       	or	r24, r25
 816:	85 bf       	out	0x35, r24	; 53
 818:	80 e0       	ldi	r24, 0x00	; 0
 81a:	08 95       	ret
 81c:	81 e0       	ldi	r24, 0x01	; 1
 81e:	08 95       	ret
 820:	81 e0       	ldi	r24, 0x01	; 1
 822:	08 95       	ret

00000824 <gpio_enable_INT1>:
 824:	fc 01       	movw	r30, r24
 826:	89 2b       	or	r24, r25
 828:	99 f0       	breq	.+38     	; 0x850 <gpio_enable_INT1+0x2c>
 82a:	90 81       	ld	r25, Z
 82c:	9f 73       	andi	r25, 0x3F	; 63
 82e:	9b 31       	cpi	r25, 0x1B	; 27
 830:	89 f4       	brne	.+34     	; 0x854 <gpio_enable_INT1+0x30>
 832:	8b b7       	in	r24, 0x3b	; 59
 834:	80 68       	ori	r24, 0x80	; 128
 836:	8b bf       	out	0x3b, r24	; 59
 838:	25 b7       	in	r18, 0x35	; 53
 83a:	91 81       	ldd	r25, Z+1	; 0x01
 83c:	89 2f       	mov	r24, r25
 83e:	90 e0       	ldi	r25, 0x00	; 0
 840:	88 0f       	add	r24, r24
 842:	99 1f       	adc	r25, r25
 844:	88 0f       	add	r24, r24
 846:	99 1f       	adc	r25, r25
 848:	82 2b       	or	r24, r18
 84a:	85 bf       	out	0x35, r24	; 53
 84c:	80 e0       	ldi	r24, 0x00	; 0
 84e:	08 95       	ret
 850:	81 e0       	ldi	r24, 0x01	; 1
 852:	08 95       	ret
 854:	81 e0       	ldi	r24, 0x01	; 1
 856:	08 95       	ret

00000858 <gpio_disable_INT0>:
 858:	00 97       	sbiw	r24, 0x00	; 0
 85a:	51 f0       	breq	.+20     	; 0x870 <__stack+0x11>
 85c:	fc 01       	movw	r30, r24
 85e:	80 81       	ld	r24, Z
 860:	8f 73       	andi	r24, 0x3F	; 63
 862:	83 31       	cpi	r24, 0x13	; 19
 864:	39 f4       	brne	.+14     	; 0x874 <__stack+0x15>
 866:	8b b7       	in	r24, 0x3b	; 59
 868:	8f 7b       	andi	r24, 0xBF	; 191
 86a:	8b bf       	out	0x3b, r24	; 59
 86c:	80 e0       	ldi	r24, 0x00	; 0
 86e:	08 95       	ret
 870:	81 e0       	ldi	r24, 0x01	; 1
 872:	08 95       	ret
 874:	81 e0       	ldi	r24, 0x01	; 1
 876:	08 95       	ret

00000878 <gpio_disable_INT1>:
 878:	00 97       	sbiw	r24, 0x00	; 0
 87a:	51 f0       	breq	.+20     	; 0x890 <gpio_disable_INT1+0x18>
 87c:	fc 01       	movw	r30, r24
 87e:	80 81       	ld	r24, Z
 880:	8f 73       	andi	r24, 0x3F	; 63
 882:	8b 31       	cpi	r24, 0x1B	; 27
 884:	39 f4       	brne	.+14     	; 0x894 <gpio_disable_INT1+0x1c>
 886:	8b b7       	in	r24, 0x3b	; 59
 888:	8f 77       	andi	r24, 0x7F	; 127
 88a:	8b bf       	out	0x3b, r24	; 59
 88c:	80 e0       	ldi	r24, 0x00	; 0
 88e:	08 95       	ret
 890:	81 e0       	ldi	r24, 0x01	; 1
 892:	08 95       	ret
 894:	81 e0       	ldi	r24, 0x01	; 1
 896:	08 95       	ret

00000898 <gpio_set_callback_INT0_function>:
 898:	00 97       	sbiw	r24, 0x00	; 0
 89a:	31 f0       	breq	.+12     	; 0x8a8 <gpio_set_callback_INT0_function+0x10>
 89c:	90 93 78 00 	sts	0x0078, r25	; 0x800078 <callback_0+0x1>
 8a0:	80 93 77 00 	sts	0x0077, r24	; 0x800077 <callback_0>
 8a4:	80 e0       	ldi	r24, 0x00	; 0
 8a6:	08 95       	ret
 8a8:	81 e0       	ldi	r24, 0x01	; 1
 8aa:	08 95       	ret

000008ac <gpio_set_callback_INT1_function>:
 8ac:	00 97       	sbiw	r24, 0x00	; 0
 8ae:	31 f0       	breq	.+12     	; 0x8bc <gpio_set_callback_INT1_function+0x10>
 8b0:	90 93 76 00 	sts	0x0076, r25	; 0x800076 <callback_1+0x1>
 8b4:	80 93 75 00 	sts	0x0075, r24	; 0x800075 <callback_1>
 8b8:	80 e0       	ldi	r24, 0x00	; 0
 8ba:	08 95       	ret
 8bc:	81 e0       	ldi	r24, 0x01	; 1
 8be:	08 95       	ret

000008c0 <__vector_1>:
 8c0:	1f 92       	push	r1
 8c2:	0f 92       	push	r0
 8c4:	0f b6       	in	r0, 0x3f	; 63
 8c6:	0f 92       	push	r0
 8c8:	11 24       	eor	r1, r1
 8ca:	2f 93       	push	r18
 8cc:	3f 93       	push	r19
 8ce:	4f 93       	push	r20
 8d0:	5f 93       	push	r21
 8d2:	6f 93       	push	r22
 8d4:	7f 93       	push	r23
 8d6:	8f 93       	push	r24
 8d8:	9f 93       	push	r25
 8da:	af 93       	push	r26
 8dc:	bf 93       	push	r27
 8de:	ef 93       	push	r30
 8e0:	ff 93       	push	r31
 8e2:	e0 91 77 00 	lds	r30, 0x0077	; 0x800077 <callback_0>
 8e6:	f0 91 78 00 	lds	r31, 0x0078	; 0x800078 <callback_0+0x1>
 8ea:	09 95       	icall
 8ec:	ff 91       	pop	r31
 8ee:	ef 91       	pop	r30
 8f0:	bf 91       	pop	r27
 8f2:	af 91       	pop	r26
 8f4:	9f 91       	pop	r25
 8f6:	8f 91       	pop	r24
 8f8:	7f 91       	pop	r23
 8fa:	6f 91       	pop	r22
 8fc:	5f 91       	pop	r21
 8fe:	4f 91       	pop	r20
 900:	3f 91       	pop	r19
 902:	2f 91       	pop	r18
 904:	0f 90       	pop	r0
 906:	0f be       	out	0x3f, r0	; 63
 908:	0f 90       	pop	r0
 90a:	1f 90       	pop	r1
 90c:	18 95       	reti

0000090e <__vector_2>:
 90e:	1f 92       	push	r1
 910:	0f 92       	push	r0
 912:	0f b6       	in	r0, 0x3f	; 63
 914:	0f 92       	push	r0
 916:	11 24       	eor	r1, r1
 918:	2f 93       	push	r18
 91a:	3f 93       	push	r19
 91c:	4f 93       	push	r20
 91e:	5f 93       	push	r21
 920:	6f 93       	push	r22
 922:	7f 93       	push	r23
 924:	8f 93       	push	r24
 926:	9f 93       	push	r25
 928:	af 93       	push	r26
 92a:	bf 93       	push	r27
 92c:	ef 93       	push	r30
 92e:	ff 93       	push	r31
 930:	e0 91 75 00 	lds	r30, 0x0075	; 0x800075 <callback_1>
 934:	f0 91 76 00 	lds	r31, 0x0076	; 0x800076 <callback_1+0x1>
 938:	09 95       	icall
 93a:	ff 91       	pop	r31
 93c:	ef 91       	pop	r30
 93e:	bf 91       	pop	r27
 940:	af 91       	pop	r26
 942:	9f 91       	pop	r25
 944:	8f 91       	pop	r24
 946:	7f 91       	pop	r23
 948:	6f 91       	pop	r22
 94a:	5f 91       	pop	r21
 94c:	4f 91       	pop	r20
 94e:	3f 91       	pop	r19
 950:	2f 91       	pop	r18
 952:	0f 90       	pop	r0
 954:	0f be       	out	0x3f, r0	; 63
 956:	0f 90       	pop	r0
 958:	1f 90       	pop	r1
 95a:	18 95       	reti

0000095c <timer0_initialization>:
}
Std_ReturnType timer_initialize_callback_COMP(void (*callback)(void)){
	Std_ReturnType ret = E_OK;
	timer_callback_COMP = callback;
	return ret;
}
 95c:	fc 01       	movw	r30, r24
 95e:	89 2b       	or	r24, r25
 960:	91 f1       	breq	.+100    	; 0x9c6 <timer0_initialization+0x6a>
 962:	83 b7       	in	r24, 0x33	; 51
 964:	90 81       	ld	r25, Z
 966:	29 2f       	mov	r18, r25
 968:	21 70       	andi	r18, 0x01	; 1
 96a:	30 e0       	ldi	r19, 0x00	; 0
 96c:	00 24       	eor	r0, r0
 96e:	36 95       	lsr	r19
 970:	27 95       	ror	r18
 972:	07 94       	ror	r0
 974:	36 95       	lsr	r19
 976:	27 95       	ror	r18
 978:	07 94       	ror	r0
 97a:	32 2f       	mov	r19, r18
 97c:	20 2d       	mov	r18, r0
 97e:	28 2b       	or	r18, r24
 980:	23 bf       	out	0x33, r18	; 51
 982:	83 b7       	in	r24, 0x33	; 51
 984:	90 81       	ld	r25, Z
 986:	96 95       	lsr	r25
 988:	29 2f       	mov	r18, r25
 98a:	30 e0       	ldi	r19, 0x00	; 0
 98c:	22 0f       	add	r18, r18
 98e:	33 1f       	adc	r19, r19
 990:	22 0f       	add	r18, r18
 992:	33 1f       	adc	r19, r19
 994:	22 0f       	add	r18, r18
 996:	33 1f       	adc	r19, r19
 998:	28 2b       	or	r18, r24
 99a:	23 bf       	out	0x33, r18	; 51
 99c:	80 81       	ld	r24, Z
 99e:	81 11       	cpse	r24, r1
 9a0:	14 c0       	rjmp	.+40     	; 0x9ca <timer0_initialization+0x6e>
 9a2:	99 b7       	in	r25, 0x39	; 57
 9a4:	84 81       	ldd	r24, Z+4	; 0x04
 9a6:	48 2f       	mov	r20, r24
 9a8:	41 70       	andi	r20, 0x01	; 1
 9aa:	50 e0       	ldi	r21, 0x00	; 0
 9ac:	44 0f       	add	r20, r20
 9ae:	55 1f       	adc	r21, r21
 9b0:	86 95       	lsr	r24
 9b2:	81 70       	andi	r24, 0x01	; 1
 9b4:	48 2b       	or	r20, r24
 9b6:	49 2b       	or	r20, r25
 9b8:	49 bf       	out	0x39, r20	; 57
 9ba:	84 81       	ldd	r24, Z+4	; 0x04
 9bc:	83 70       	andi	r24, 0x03	; 3
 9be:	39 f0       	breq	.+14     	; 0x9ce <timer0_initialization+0x72>
 9c0:	78 94       	sei
 9c2:	80 e0       	ldi	r24, 0x00	; 0
 9c4:	08 95       	ret
 9c6:	81 e0       	ldi	r24, 0x01	; 1
 9c8:	08 95       	ret
 9ca:	80 e0       	ldi	r24, 0x00	; 0
 9cc:	08 95       	ret
 9ce:	80 e0       	ldi	r24, 0x00	; 0
 9d0:	08 95       	ret

000009d2 <timer_start>:
 9d2:	00 97       	sbiw	r24, 0x00	; 0
 9d4:	61 f0       	breq	.+24     	; 0x9ee <timer_start+0x1c>
 9d6:	fc 01       	movw	r30, r24
 9d8:	20 81       	ld	r18, Z
 9da:	21 11       	cpse	r18, r1
 9dc:	0a c0       	rjmp	.+20     	; 0x9f2 <timer_start+0x20>
 9de:	22 81       	ldd	r18, Z+2	; 0x02
 9e0:	22 bf       	out	0x32, r18	; 50
 9e2:	23 b7       	in	r18, 0x33	; 51
 9e4:	81 81       	ldd	r24, Z+1	; 0x01
 9e6:	82 2b       	or	r24, r18
 9e8:	83 bf       	out	0x33, r24	; 51
 9ea:	80 e0       	ldi	r24, 0x00	; 0
 9ec:	08 95       	ret
 9ee:	81 e0       	ldi	r24, 0x01	; 1
 9f0:	08 95       	ret
 9f2:	80 e0       	ldi	r24, 0x00	; 0
 9f4:	08 95       	ret

000009f6 <timer_stop>:
 9f6:	00 97       	sbiw	r24, 0x00	; 0
 9f8:	49 f0       	breq	.+18     	; 0xa0c <timer_stop+0x16>
 9fa:	fc 01       	movw	r30, r24
 9fc:	80 81       	ld	r24, Z
 9fe:	81 11       	cpse	r24, r1
 a00:	07 c0       	rjmp	.+14     	; 0xa10 <timer_stop+0x1a>
 a02:	83 b7       	in	r24, 0x33	; 51
 a04:	88 7f       	andi	r24, 0xF8	; 248
 a06:	83 bf       	out	0x33, r24	; 51
 a08:	80 e0       	ldi	r24, 0x00	; 0
 a0a:	08 95       	ret
 a0c:	81 e0       	ldi	r24, 0x01	; 1
 a0e:	08 95       	ret
 a10:	80 e0       	ldi	r24, 0x00	; 0
 a12:	08 95       	ret

00000a14 <timer_initialize_callback_OVF>:
 a14:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <timer_callback_OVF+0x1>
 a18:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <timer_callback_OVF>
 a1c:	80 e0       	ldi	r24, 0x00	; 0
 a1e:	08 95       	ret

00000a20 <__vector_11>:

ISR (TIMER0_OVF_vect)        //Timer overflow interrupt
{
 a20:	1f 92       	push	r1
 a22:	0f 92       	push	r0
 a24:	0f b6       	in	r0, 0x3f	; 63
 a26:	0f 92       	push	r0
 a28:	11 24       	eor	r1, r1
 a2a:	2f 93       	push	r18
 a2c:	3f 93       	push	r19
 a2e:	4f 93       	push	r20
 a30:	5f 93       	push	r21
 a32:	6f 93       	push	r22
 a34:	7f 93       	push	r23
 a36:	8f 93       	push	r24
 a38:	9f 93       	push	r25
 a3a:	af 93       	push	r26
 a3c:	bf 93       	push	r27
 a3e:	ef 93       	push	r30
 a40:	ff 93       	push	r31
	(*timer_callback_OVF)();
 a42:	e0 91 7b 00 	lds	r30, 0x007B	; 0x80007b <timer_callback_OVF>
 a46:	f0 91 7c 00 	lds	r31, 0x007C	; 0x80007c <timer_callback_OVF+0x1>
 a4a:	09 95       	icall
	
}
 a4c:	ff 91       	pop	r31
 a4e:	ef 91       	pop	r30
 a50:	bf 91       	pop	r27
 a52:	af 91       	pop	r26
 a54:	9f 91       	pop	r25
 a56:	8f 91       	pop	r24
 a58:	7f 91       	pop	r23
 a5a:	6f 91       	pop	r22
 a5c:	5f 91       	pop	r21
 a5e:	4f 91       	pop	r20
 a60:	3f 91       	pop	r19
 a62:	2f 91       	pop	r18
 a64:	0f 90       	pop	r0
 a66:	0f be       	out	0x3f, r0	; 63
 a68:	0f 90       	pop	r0
 a6a:	1f 90       	pop	r1
 a6c:	18 95       	reti

00000a6e <__vector_10>:
ISR (TIMER0_COMP_vect)       //Timer compare match interrupt
{
 a6e:	1f 92       	push	r1
 a70:	0f 92       	push	r0
 a72:	0f b6       	in	r0, 0x3f	; 63
 a74:	0f 92       	push	r0
 a76:	11 24       	eor	r1, r1
 a78:	2f 93       	push	r18
 a7a:	3f 93       	push	r19
 a7c:	4f 93       	push	r20
 a7e:	5f 93       	push	r21
 a80:	6f 93       	push	r22
 a82:	7f 93       	push	r23
 a84:	8f 93       	push	r24
 a86:	9f 93       	push	r25
 a88:	af 93       	push	r26
 a8a:	bf 93       	push	r27
 a8c:	ef 93       	push	r30
 a8e:	ff 93       	push	r31
	(*timer_callback_COMP)();
 a90:	e0 91 79 00 	lds	r30, 0x0079	; 0x800079 <timer_callback_COMP>
 a94:	f0 91 7a 00 	lds	r31, 0x007A	; 0x80007a <timer_callback_COMP+0x1>
 a98:	09 95       	icall
 a9a:	ff 91       	pop	r31
 a9c:	ef 91       	pop	r30
 a9e:	bf 91       	pop	r27
 aa0:	af 91       	pop	r26
 aa2:	9f 91       	pop	r25
 aa4:	8f 91       	pop	r24
 aa6:	7f 91       	pop	r23
 aa8:	6f 91       	pop	r22
 aaa:	5f 91       	pop	r21
 aac:	4f 91       	pop	r20
 aae:	3f 91       	pop	r19
 ab0:	2f 91       	pop	r18
 ab2:	0f 90       	pop	r0
 ab4:	0f be       	out	0x3f, r0	; 63
 ab6:	0f 90       	pop	r0
 ab8:	1f 90       	pop	r1
 aba:	18 95       	reti

00000abc <__divsf3>:
 abc:	0e 94 72 05 	call	0xae4	; 0xae4 <__divsf3x>
 ac0:	0c 94 91 06 	jmp	0xd22	; 0xd22 <__fp_round>
 ac4:	0e 94 8a 06 	call	0xd14	; 0xd14 <__fp_pscB>
 ac8:	58 f0       	brcs	.+22     	; 0xae0 <__divsf3+0x24>
 aca:	0e 94 83 06 	call	0xd06	; 0xd06 <__fp_pscA>
 ace:	40 f0       	brcs	.+16     	; 0xae0 <__divsf3+0x24>
 ad0:	29 f4       	brne	.+10     	; 0xadc <__divsf3+0x20>
 ad2:	5f 3f       	cpi	r21, 0xFF	; 255
 ad4:	29 f0       	breq	.+10     	; 0xae0 <__divsf3+0x24>
 ad6:	0c 94 7a 06 	jmp	0xcf4	; 0xcf4 <__fp_inf>
 ada:	51 11       	cpse	r21, r1
 adc:	0c 94 c5 06 	jmp	0xd8a	; 0xd8a <__fp_szero>
 ae0:	0c 94 80 06 	jmp	0xd00	; 0xd00 <__fp_nan>

00000ae4 <__divsf3x>:
 ae4:	0e 94 a2 06 	call	0xd44	; 0xd44 <__fp_split3>
 ae8:	68 f3       	brcs	.-38     	; 0xac4 <__divsf3+0x8>

00000aea <__divsf3_pse>:
 aea:	99 23       	and	r25, r25
 aec:	b1 f3       	breq	.-20     	; 0xada <__divsf3+0x1e>
 aee:	55 23       	and	r21, r21
 af0:	91 f3       	breq	.-28     	; 0xad6 <__divsf3+0x1a>
 af2:	95 1b       	sub	r25, r21
 af4:	55 0b       	sbc	r21, r21
 af6:	bb 27       	eor	r27, r27
 af8:	aa 27       	eor	r26, r26
 afa:	62 17       	cp	r22, r18
 afc:	73 07       	cpc	r23, r19
 afe:	84 07       	cpc	r24, r20
 b00:	38 f0       	brcs	.+14     	; 0xb10 <__divsf3_pse+0x26>
 b02:	9f 5f       	subi	r25, 0xFF	; 255
 b04:	5f 4f       	sbci	r21, 0xFF	; 255
 b06:	22 0f       	add	r18, r18
 b08:	33 1f       	adc	r19, r19
 b0a:	44 1f       	adc	r20, r20
 b0c:	aa 1f       	adc	r26, r26
 b0e:	a9 f3       	breq	.-22     	; 0xafa <__divsf3_pse+0x10>
 b10:	35 d0       	rcall	.+106    	; 0xb7c <__divsf3_pse+0x92>
 b12:	0e 2e       	mov	r0, r30
 b14:	3a f0       	brmi	.+14     	; 0xb24 <__divsf3_pse+0x3a>
 b16:	e0 e8       	ldi	r30, 0x80	; 128
 b18:	32 d0       	rcall	.+100    	; 0xb7e <__divsf3_pse+0x94>
 b1a:	91 50       	subi	r25, 0x01	; 1
 b1c:	50 40       	sbci	r21, 0x00	; 0
 b1e:	e6 95       	lsr	r30
 b20:	00 1c       	adc	r0, r0
 b22:	ca f7       	brpl	.-14     	; 0xb16 <__divsf3_pse+0x2c>
 b24:	2b d0       	rcall	.+86     	; 0xb7c <__divsf3_pse+0x92>
 b26:	fe 2f       	mov	r31, r30
 b28:	29 d0       	rcall	.+82     	; 0xb7c <__divsf3_pse+0x92>
 b2a:	66 0f       	add	r22, r22
 b2c:	77 1f       	adc	r23, r23
 b2e:	88 1f       	adc	r24, r24
 b30:	bb 1f       	adc	r27, r27
 b32:	26 17       	cp	r18, r22
 b34:	37 07       	cpc	r19, r23
 b36:	48 07       	cpc	r20, r24
 b38:	ab 07       	cpc	r26, r27
 b3a:	b0 e8       	ldi	r27, 0x80	; 128
 b3c:	09 f0       	breq	.+2      	; 0xb40 <__divsf3_pse+0x56>
 b3e:	bb 0b       	sbc	r27, r27
 b40:	80 2d       	mov	r24, r0
 b42:	bf 01       	movw	r22, r30
 b44:	ff 27       	eor	r31, r31
 b46:	93 58       	subi	r25, 0x83	; 131
 b48:	5f 4f       	sbci	r21, 0xFF	; 255
 b4a:	3a f0       	brmi	.+14     	; 0xb5a <__divsf3_pse+0x70>
 b4c:	9e 3f       	cpi	r25, 0xFE	; 254
 b4e:	51 05       	cpc	r21, r1
 b50:	78 f0       	brcs	.+30     	; 0xb70 <__divsf3_pse+0x86>
 b52:	0c 94 7a 06 	jmp	0xcf4	; 0xcf4 <__fp_inf>
 b56:	0c 94 c5 06 	jmp	0xd8a	; 0xd8a <__fp_szero>
 b5a:	5f 3f       	cpi	r21, 0xFF	; 255
 b5c:	e4 f3       	brlt	.-8      	; 0xb56 <__divsf3_pse+0x6c>
 b5e:	98 3e       	cpi	r25, 0xE8	; 232
 b60:	d4 f3       	brlt	.-12     	; 0xb56 <__divsf3_pse+0x6c>
 b62:	86 95       	lsr	r24
 b64:	77 95       	ror	r23
 b66:	67 95       	ror	r22
 b68:	b7 95       	ror	r27
 b6a:	f7 95       	ror	r31
 b6c:	9f 5f       	subi	r25, 0xFF	; 255
 b6e:	c9 f7       	brne	.-14     	; 0xb62 <__divsf3_pse+0x78>
 b70:	88 0f       	add	r24, r24
 b72:	91 1d       	adc	r25, r1
 b74:	96 95       	lsr	r25
 b76:	87 95       	ror	r24
 b78:	97 f9       	bld	r25, 7
 b7a:	08 95       	ret
 b7c:	e1 e0       	ldi	r30, 0x01	; 1
 b7e:	66 0f       	add	r22, r22
 b80:	77 1f       	adc	r23, r23
 b82:	88 1f       	adc	r24, r24
 b84:	bb 1f       	adc	r27, r27
 b86:	62 17       	cp	r22, r18
 b88:	73 07       	cpc	r23, r19
 b8a:	84 07       	cpc	r24, r20
 b8c:	ba 07       	cpc	r27, r26
 b8e:	20 f0       	brcs	.+8      	; 0xb98 <__divsf3_pse+0xae>
 b90:	62 1b       	sub	r22, r18
 b92:	73 0b       	sbc	r23, r19
 b94:	84 0b       	sbc	r24, r20
 b96:	ba 0b       	sbc	r27, r26
 b98:	ee 1f       	adc	r30, r30
 b9a:	88 f7       	brcc	.-30     	; 0xb7e <__divsf3_pse+0x94>
 b9c:	e0 95       	com	r30
 b9e:	08 95       	ret

00000ba0 <__fixunssfsi>:
 ba0:	0e 94 aa 06 	call	0xd54	; 0xd54 <__fp_splitA>
 ba4:	88 f0       	brcs	.+34     	; 0xbc8 <__fixunssfsi+0x28>
 ba6:	9f 57       	subi	r25, 0x7F	; 127
 ba8:	98 f0       	brcs	.+38     	; 0xbd0 <__fixunssfsi+0x30>
 baa:	b9 2f       	mov	r27, r25
 bac:	99 27       	eor	r25, r25
 bae:	b7 51       	subi	r27, 0x17	; 23
 bb0:	b0 f0       	brcs	.+44     	; 0xbde <__fixunssfsi+0x3e>
 bb2:	e1 f0       	breq	.+56     	; 0xbec <__fixunssfsi+0x4c>
 bb4:	66 0f       	add	r22, r22
 bb6:	77 1f       	adc	r23, r23
 bb8:	88 1f       	adc	r24, r24
 bba:	99 1f       	adc	r25, r25
 bbc:	1a f0       	brmi	.+6      	; 0xbc4 <__fixunssfsi+0x24>
 bbe:	ba 95       	dec	r27
 bc0:	c9 f7       	brne	.-14     	; 0xbb4 <__fixunssfsi+0x14>
 bc2:	14 c0       	rjmp	.+40     	; 0xbec <__fixunssfsi+0x4c>
 bc4:	b1 30       	cpi	r27, 0x01	; 1
 bc6:	91 f0       	breq	.+36     	; 0xbec <__fixunssfsi+0x4c>
 bc8:	0e 94 c4 06 	call	0xd88	; 0xd88 <__fp_zero>
 bcc:	b1 e0       	ldi	r27, 0x01	; 1
 bce:	08 95       	ret
 bd0:	0c 94 c4 06 	jmp	0xd88	; 0xd88 <__fp_zero>
 bd4:	67 2f       	mov	r22, r23
 bd6:	78 2f       	mov	r23, r24
 bd8:	88 27       	eor	r24, r24
 bda:	b8 5f       	subi	r27, 0xF8	; 248
 bdc:	39 f0       	breq	.+14     	; 0xbec <__fixunssfsi+0x4c>
 bde:	b9 3f       	cpi	r27, 0xF9	; 249
 be0:	cc f3       	brlt	.-14     	; 0xbd4 <__fixunssfsi+0x34>
 be2:	86 95       	lsr	r24
 be4:	77 95       	ror	r23
 be6:	67 95       	ror	r22
 be8:	b3 95       	inc	r27
 bea:	d9 f7       	brne	.-10     	; 0xbe2 <__fixunssfsi+0x42>
 bec:	3e f4       	brtc	.+14     	; 0xbfc <__fixunssfsi+0x5c>
 bee:	90 95       	com	r25
 bf0:	80 95       	com	r24
 bf2:	70 95       	com	r23
 bf4:	61 95       	neg	r22
 bf6:	7f 4f       	sbci	r23, 0xFF	; 255
 bf8:	8f 4f       	sbci	r24, 0xFF	; 255
 bfa:	9f 4f       	sbci	r25, 0xFF	; 255
 bfc:	08 95       	ret

00000bfe <__floatunsisf>:
 bfe:	e8 94       	clt
 c00:	09 c0       	rjmp	.+18     	; 0xc14 <__floatsisf+0x12>

00000c02 <__floatsisf>:
 c02:	97 fb       	bst	r25, 7
 c04:	3e f4       	brtc	.+14     	; 0xc14 <__floatsisf+0x12>
 c06:	90 95       	com	r25
 c08:	80 95       	com	r24
 c0a:	70 95       	com	r23
 c0c:	61 95       	neg	r22
 c0e:	7f 4f       	sbci	r23, 0xFF	; 255
 c10:	8f 4f       	sbci	r24, 0xFF	; 255
 c12:	9f 4f       	sbci	r25, 0xFF	; 255
 c14:	99 23       	and	r25, r25
 c16:	a9 f0       	breq	.+42     	; 0xc42 <__floatsisf+0x40>
 c18:	f9 2f       	mov	r31, r25
 c1a:	96 e9       	ldi	r25, 0x96	; 150
 c1c:	bb 27       	eor	r27, r27
 c1e:	93 95       	inc	r25
 c20:	f6 95       	lsr	r31
 c22:	87 95       	ror	r24
 c24:	77 95       	ror	r23
 c26:	67 95       	ror	r22
 c28:	b7 95       	ror	r27
 c2a:	f1 11       	cpse	r31, r1
 c2c:	f8 cf       	rjmp	.-16     	; 0xc1e <__floatsisf+0x1c>
 c2e:	fa f4       	brpl	.+62     	; 0xc6e <__floatsisf+0x6c>
 c30:	bb 0f       	add	r27, r27
 c32:	11 f4       	brne	.+4      	; 0xc38 <__floatsisf+0x36>
 c34:	60 ff       	sbrs	r22, 0
 c36:	1b c0       	rjmp	.+54     	; 0xc6e <__floatsisf+0x6c>
 c38:	6f 5f       	subi	r22, 0xFF	; 255
 c3a:	7f 4f       	sbci	r23, 0xFF	; 255
 c3c:	8f 4f       	sbci	r24, 0xFF	; 255
 c3e:	9f 4f       	sbci	r25, 0xFF	; 255
 c40:	16 c0       	rjmp	.+44     	; 0xc6e <__floatsisf+0x6c>
 c42:	88 23       	and	r24, r24
 c44:	11 f0       	breq	.+4      	; 0xc4a <__floatsisf+0x48>
 c46:	96 e9       	ldi	r25, 0x96	; 150
 c48:	11 c0       	rjmp	.+34     	; 0xc6c <__floatsisf+0x6a>
 c4a:	77 23       	and	r23, r23
 c4c:	21 f0       	breq	.+8      	; 0xc56 <__floatsisf+0x54>
 c4e:	9e e8       	ldi	r25, 0x8E	; 142
 c50:	87 2f       	mov	r24, r23
 c52:	76 2f       	mov	r23, r22
 c54:	05 c0       	rjmp	.+10     	; 0xc60 <__floatsisf+0x5e>
 c56:	66 23       	and	r22, r22
 c58:	71 f0       	breq	.+28     	; 0xc76 <__floatsisf+0x74>
 c5a:	96 e8       	ldi	r25, 0x86	; 134
 c5c:	86 2f       	mov	r24, r22
 c5e:	70 e0       	ldi	r23, 0x00	; 0
 c60:	60 e0       	ldi	r22, 0x00	; 0
 c62:	2a f0       	brmi	.+10     	; 0xc6e <__floatsisf+0x6c>
 c64:	9a 95       	dec	r25
 c66:	66 0f       	add	r22, r22
 c68:	77 1f       	adc	r23, r23
 c6a:	88 1f       	adc	r24, r24
 c6c:	da f7       	brpl	.-10     	; 0xc64 <__floatsisf+0x62>
 c6e:	88 0f       	add	r24, r24
 c70:	96 95       	lsr	r25
 c72:	87 95       	ror	r24
 c74:	97 f9       	bld	r25, 7
 c76:	08 95       	ret

00000c78 <__floatundisf>:
 c78:	e8 94       	clt

00000c7a <__fp_di2sf>:
 c7a:	f9 2f       	mov	r31, r25
 c7c:	96 eb       	ldi	r25, 0xB6	; 182
 c7e:	ff 23       	and	r31, r31
 c80:	81 f0       	breq	.+32     	; 0xca2 <__fp_di2sf+0x28>
 c82:	12 16       	cp	r1, r18
 c84:	13 06       	cpc	r1, r19
 c86:	14 06       	cpc	r1, r20
 c88:	44 0b       	sbc	r20, r20
 c8a:	93 95       	inc	r25
 c8c:	f6 95       	lsr	r31
 c8e:	87 95       	ror	r24
 c90:	77 95       	ror	r23
 c92:	67 95       	ror	r22
 c94:	57 95       	ror	r21
 c96:	40 40       	sbci	r20, 0x00	; 0
 c98:	ff 23       	and	r31, r31
 c9a:	b9 f7       	brne	.-18     	; 0xc8a <__fp_di2sf+0x10>
 c9c:	1b c0       	rjmp	.+54     	; 0xcd4 <__fp_di2sf+0x5a>
 c9e:	99 27       	eor	r25, r25
 ca0:	08 95       	ret
 ca2:	88 23       	and	r24, r24
 ca4:	51 f4       	brne	.+20     	; 0xcba <__fp_di2sf+0x40>
 ca6:	98 50       	subi	r25, 0x08	; 8
 ca8:	d2 f7       	brpl	.-12     	; 0xc9e <__fp_di2sf+0x24>
 caa:	87 2b       	or	r24, r23
 cac:	76 2f       	mov	r23, r22
 cae:	65 2f       	mov	r22, r21
 cb0:	54 2f       	mov	r21, r20
 cb2:	43 2f       	mov	r20, r19
 cb4:	32 2f       	mov	r19, r18
 cb6:	20 e0       	ldi	r18, 0x00	; 0
 cb8:	b1 f3       	breq	.-20     	; 0xca6 <__fp_di2sf+0x2c>
 cba:	12 16       	cp	r1, r18
 cbc:	13 06       	cpc	r1, r19
 cbe:	14 06       	cpc	r1, r20
 cc0:	44 0b       	sbc	r20, r20
 cc2:	88 23       	and	r24, r24
 cc4:	3a f0       	brmi	.+14     	; 0xcd4 <__fp_di2sf+0x5a>
 cc6:	9a 95       	dec	r25
 cc8:	44 0f       	add	r20, r20
 cca:	55 1f       	adc	r21, r21
 ccc:	66 1f       	adc	r22, r22
 cce:	77 1f       	adc	r23, r23
 cd0:	88 1f       	adc	r24, r24
 cd2:	ca f7       	brpl	.-14     	; 0xcc6 <__fp_di2sf+0x4c>
 cd4:	55 23       	and	r21, r21
 cd6:	4a f4       	brpl	.+18     	; 0xcea <__fp_di2sf+0x70>
 cd8:	44 0f       	add	r20, r20
 cda:	55 1f       	adc	r21, r21
 cdc:	11 f4       	brne	.+4      	; 0xce2 <__fp_di2sf+0x68>
 cde:	60 ff       	sbrs	r22, 0
 ce0:	04 c0       	rjmp	.+8      	; 0xcea <__fp_di2sf+0x70>
 ce2:	6f 5f       	subi	r22, 0xFF	; 255
 ce4:	7f 4f       	sbci	r23, 0xFF	; 255
 ce6:	8f 4f       	sbci	r24, 0xFF	; 255
 ce8:	9f 4f       	sbci	r25, 0xFF	; 255
 cea:	88 0f       	add	r24, r24
 cec:	96 95       	lsr	r25
 cee:	87 95       	ror	r24
 cf0:	97 f9       	bld	r25, 7
 cf2:	08 95       	ret

00000cf4 <__fp_inf>:
 cf4:	97 f9       	bld	r25, 7
 cf6:	9f 67       	ori	r25, 0x7F	; 127
 cf8:	80 e8       	ldi	r24, 0x80	; 128
 cfa:	70 e0       	ldi	r23, 0x00	; 0
 cfc:	60 e0       	ldi	r22, 0x00	; 0
 cfe:	08 95       	ret

00000d00 <__fp_nan>:
 d00:	9f ef       	ldi	r25, 0xFF	; 255
 d02:	80 ec       	ldi	r24, 0xC0	; 192
 d04:	08 95       	ret

00000d06 <__fp_pscA>:
 d06:	00 24       	eor	r0, r0
 d08:	0a 94       	dec	r0
 d0a:	16 16       	cp	r1, r22
 d0c:	17 06       	cpc	r1, r23
 d0e:	18 06       	cpc	r1, r24
 d10:	09 06       	cpc	r0, r25
 d12:	08 95       	ret

00000d14 <__fp_pscB>:
 d14:	00 24       	eor	r0, r0
 d16:	0a 94       	dec	r0
 d18:	12 16       	cp	r1, r18
 d1a:	13 06       	cpc	r1, r19
 d1c:	14 06       	cpc	r1, r20
 d1e:	05 06       	cpc	r0, r21
 d20:	08 95       	ret

00000d22 <__fp_round>:
 d22:	09 2e       	mov	r0, r25
 d24:	03 94       	inc	r0
 d26:	00 0c       	add	r0, r0
 d28:	11 f4       	brne	.+4      	; 0xd2e <__fp_round+0xc>
 d2a:	88 23       	and	r24, r24
 d2c:	52 f0       	brmi	.+20     	; 0xd42 <__fp_round+0x20>
 d2e:	bb 0f       	add	r27, r27
 d30:	40 f4       	brcc	.+16     	; 0xd42 <__fp_round+0x20>
 d32:	bf 2b       	or	r27, r31
 d34:	11 f4       	brne	.+4      	; 0xd3a <__fp_round+0x18>
 d36:	60 ff       	sbrs	r22, 0
 d38:	04 c0       	rjmp	.+8      	; 0xd42 <__fp_round+0x20>
 d3a:	6f 5f       	subi	r22, 0xFF	; 255
 d3c:	7f 4f       	sbci	r23, 0xFF	; 255
 d3e:	8f 4f       	sbci	r24, 0xFF	; 255
 d40:	9f 4f       	sbci	r25, 0xFF	; 255
 d42:	08 95       	ret

00000d44 <__fp_split3>:
 d44:	57 fd       	sbrc	r21, 7
 d46:	90 58       	subi	r25, 0x80	; 128
 d48:	44 0f       	add	r20, r20
 d4a:	55 1f       	adc	r21, r21
 d4c:	59 f0       	breq	.+22     	; 0xd64 <__fp_splitA+0x10>
 d4e:	5f 3f       	cpi	r21, 0xFF	; 255
 d50:	71 f0       	breq	.+28     	; 0xd6e <__fp_splitA+0x1a>
 d52:	47 95       	ror	r20

00000d54 <__fp_splitA>:
 d54:	88 0f       	add	r24, r24
 d56:	97 fb       	bst	r25, 7
 d58:	99 1f       	adc	r25, r25
 d5a:	61 f0       	breq	.+24     	; 0xd74 <__fp_splitA+0x20>
 d5c:	9f 3f       	cpi	r25, 0xFF	; 255
 d5e:	79 f0       	breq	.+30     	; 0xd7e <__fp_splitA+0x2a>
 d60:	87 95       	ror	r24
 d62:	08 95       	ret
 d64:	12 16       	cp	r1, r18
 d66:	13 06       	cpc	r1, r19
 d68:	14 06       	cpc	r1, r20
 d6a:	55 1f       	adc	r21, r21
 d6c:	f2 cf       	rjmp	.-28     	; 0xd52 <__fp_split3+0xe>
 d6e:	46 95       	lsr	r20
 d70:	f1 df       	rcall	.-30     	; 0xd54 <__fp_splitA>
 d72:	08 c0       	rjmp	.+16     	; 0xd84 <__fp_splitA+0x30>
 d74:	16 16       	cp	r1, r22
 d76:	17 06       	cpc	r1, r23
 d78:	18 06       	cpc	r1, r24
 d7a:	99 1f       	adc	r25, r25
 d7c:	f1 cf       	rjmp	.-30     	; 0xd60 <__fp_splitA+0xc>
 d7e:	86 95       	lsr	r24
 d80:	71 05       	cpc	r23, r1
 d82:	61 05       	cpc	r22, r1
 d84:	08 94       	sec
 d86:	08 95       	ret

00000d88 <__fp_zero>:
 d88:	e8 94       	clt

00000d8a <__fp_szero>:
 d8a:	bb 27       	eor	r27, r27
 d8c:	66 27       	eor	r22, r22
 d8e:	77 27       	eor	r23, r23
 d90:	cb 01       	movw	r24, r22
 d92:	97 f9       	bld	r25, 7
 d94:	08 95       	ret

00000d96 <__mulsf3>:
 d96:	0e 94 de 06 	call	0xdbc	; 0xdbc <__mulsf3x>
 d9a:	0c 94 91 06 	jmp	0xd22	; 0xd22 <__fp_round>
 d9e:	0e 94 83 06 	call	0xd06	; 0xd06 <__fp_pscA>
 da2:	38 f0       	brcs	.+14     	; 0xdb2 <__mulsf3+0x1c>
 da4:	0e 94 8a 06 	call	0xd14	; 0xd14 <__fp_pscB>
 da8:	20 f0       	brcs	.+8      	; 0xdb2 <__mulsf3+0x1c>
 daa:	95 23       	and	r25, r21
 dac:	11 f0       	breq	.+4      	; 0xdb2 <__mulsf3+0x1c>
 dae:	0c 94 7a 06 	jmp	0xcf4	; 0xcf4 <__fp_inf>
 db2:	0c 94 80 06 	jmp	0xd00	; 0xd00 <__fp_nan>
 db6:	11 24       	eor	r1, r1
 db8:	0c 94 c5 06 	jmp	0xd8a	; 0xd8a <__fp_szero>

00000dbc <__mulsf3x>:
 dbc:	0e 94 a2 06 	call	0xd44	; 0xd44 <__fp_split3>
 dc0:	70 f3       	brcs	.-36     	; 0xd9e <__mulsf3+0x8>

00000dc2 <__mulsf3_pse>:
 dc2:	95 9f       	mul	r25, r21
 dc4:	c1 f3       	breq	.-16     	; 0xdb6 <__mulsf3+0x20>
 dc6:	95 0f       	add	r25, r21
 dc8:	50 e0       	ldi	r21, 0x00	; 0
 dca:	55 1f       	adc	r21, r21
 dcc:	62 9f       	mul	r22, r18
 dce:	f0 01       	movw	r30, r0
 dd0:	72 9f       	mul	r23, r18
 dd2:	bb 27       	eor	r27, r27
 dd4:	f0 0d       	add	r31, r0
 dd6:	b1 1d       	adc	r27, r1
 dd8:	63 9f       	mul	r22, r19
 dda:	aa 27       	eor	r26, r26
 ddc:	f0 0d       	add	r31, r0
 dde:	b1 1d       	adc	r27, r1
 de0:	aa 1f       	adc	r26, r26
 de2:	64 9f       	mul	r22, r20
 de4:	66 27       	eor	r22, r22
 de6:	b0 0d       	add	r27, r0
 de8:	a1 1d       	adc	r26, r1
 dea:	66 1f       	adc	r22, r22
 dec:	82 9f       	mul	r24, r18
 dee:	22 27       	eor	r18, r18
 df0:	b0 0d       	add	r27, r0
 df2:	a1 1d       	adc	r26, r1
 df4:	62 1f       	adc	r22, r18
 df6:	73 9f       	mul	r23, r19
 df8:	b0 0d       	add	r27, r0
 dfa:	a1 1d       	adc	r26, r1
 dfc:	62 1f       	adc	r22, r18
 dfe:	83 9f       	mul	r24, r19
 e00:	a0 0d       	add	r26, r0
 e02:	61 1d       	adc	r22, r1
 e04:	22 1f       	adc	r18, r18
 e06:	74 9f       	mul	r23, r20
 e08:	33 27       	eor	r19, r19
 e0a:	a0 0d       	add	r26, r0
 e0c:	61 1d       	adc	r22, r1
 e0e:	23 1f       	adc	r18, r19
 e10:	84 9f       	mul	r24, r20
 e12:	60 0d       	add	r22, r0
 e14:	21 1d       	adc	r18, r1
 e16:	82 2f       	mov	r24, r18
 e18:	76 2f       	mov	r23, r22
 e1a:	6a 2f       	mov	r22, r26
 e1c:	11 24       	eor	r1, r1
 e1e:	9f 57       	subi	r25, 0x7F	; 127
 e20:	50 40       	sbci	r21, 0x00	; 0
 e22:	9a f0       	brmi	.+38     	; 0xe4a <__mulsf3_pse+0x88>
 e24:	f1 f0       	breq	.+60     	; 0xe62 <__mulsf3_pse+0xa0>
 e26:	88 23       	and	r24, r24
 e28:	4a f0       	brmi	.+18     	; 0xe3c <__mulsf3_pse+0x7a>
 e2a:	ee 0f       	add	r30, r30
 e2c:	ff 1f       	adc	r31, r31
 e2e:	bb 1f       	adc	r27, r27
 e30:	66 1f       	adc	r22, r22
 e32:	77 1f       	adc	r23, r23
 e34:	88 1f       	adc	r24, r24
 e36:	91 50       	subi	r25, 0x01	; 1
 e38:	50 40       	sbci	r21, 0x00	; 0
 e3a:	a9 f7       	brne	.-22     	; 0xe26 <__mulsf3_pse+0x64>
 e3c:	9e 3f       	cpi	r25, 0xFE	; 254
 e3e:	51 05       	cpc	r21, r1
 e40:	80 f0       	brcs	.+32     	; 0xe62 <__mulsf3_pse+0xa0>
 e42:	0c 94 7a 06 	jmp	0xcf4	; 0xcf4 <__fp_inf>
 e46:	0c 94 c5 06 	jmp	0xd8a	; 0xd8a <__fp_szero>
 e4a:	5f 3f       	cpi	r21, 0xFF	; 255
 e4c:	e4 f3       	brlt	.-8      	; 0xe46 <__mulsf3_pse+0x84>
 e4e:	98 3e       	cpi	r25, 0xE8	; 232
 e50:	d4 f3       	brlt	.-12     	; 0xe46 <__mulsf3_pse+0x84>
 e52:	86 95       	lsr	r24
 e54:	77 95       	ror	r23
 e56:	67 95       	ror	r22
 e58:	b7 95       	ror	r27
 e5a:	f7 95       	ror	r31
 e5c:	e7 95       	ror	r30
 e5e:	9f 5f       	subi	r25, 0xFF	; 255
 e60:	c1 f7       	brne	.-16     	; 0xe52 <__mulsf3_pse+0x90>
 e62:	fe 2b       	or	r31, r30
 e64:	88 0f       	add	r24, r24
 e66:	91 1d       	adc	r25, r1
 e68:	96 95       	lsr	r25
 e6a:	87 95       	ror	r24
 e6c:	97 f9       	bld	r25, 7
 e6e:	08 95       	ret

00000e70 <_exit>:
 e70:	f8 94       	cli

00000e72 <__stop_program>:
 e72:	ff cf       	rjmp	.-2      	; 0xe72 <__stop_program>
